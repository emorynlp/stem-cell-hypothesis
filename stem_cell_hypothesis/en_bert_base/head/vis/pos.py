# -*- coding:utf-8 -*-
# Author: hankcs
# Date: 2021-05-11 19:50
from collections import defaultdict

import matplotlib.pyplot as plt
import math

prop_cycle = plt.rcParams['axes.prop_cycle']
plt.rcParams["figure.figsize"] = (4, 3)
plt.rcParams.update({'font.size': 8})


def main():
    table = '''
	static	single	ner	dep	con	srl	all
NN	44.11	91.44 ± 0.89	78.22 ± 2.10	75.61 ± 8.22	75.88 ± 6.08	76.80 ± 3.11	54.75 ± 1.99
IN	53.45	89.79 ± 1.29	88.46 ± 1.41	82.43 ± 9.46	71.27 ± 4.62	65.22 ± 5.07	53.86 ± 3.59
DT	65.15	93.93 ± 0.92	73.36 ± 3.43	74.13 ± 2.03	81.62 ± 4.06	75.69 ± 5.04	64.11 ± 4.50
NNP	67.16	90.21 ± 3.95	81.29 ± 7.44	71.09 ± 2.35	73.17 ± 1.79	80.42 ± 2.96	62.11 ± 2.01
JJ	37.96	83.59 ± 1.72	71.73 ± 2.52	71.10 ± 1.72	70.09 ± 0.24	77.91 ± 0.39	63.35 ± 1.19
.	91.03	95.02 ± 0.67	95.36 ± 1.01	95.82 ± 0.16	95.91 ± 0.15	95.99 ± 0.26	94.61 ± 1.01
NNS	66.19	91.75 ± 1.52	80.43 ± 0.40	76.77 ± 8.28	77.16 ± 4.84	84.17 ± 1.60	63.66 ± 2.34
PRP	65.69	93.76 ± 0.49	91.17 ± 0.60	82.31 ± 3.09	84.87 ± 1.96	87.68 ± 5.60	74.13 ± 3.09
RB	28.92	83.33 ± 1.27	75.44 ± 1.58	67.30 ± 5.51	63.78 ± 6.61	67.86 ± 4.38	54.27 ± 6.03
,	86.94	95.23 ± 0.07	89.07 ± 1.74	78.15 ± 4.70	70.08 ± 1.71	93.50 ± 0.24	69.87 ± 1.63
VB	69.52	90.17 ± 1.73	84.21 ± 3.05	73.87 ± 1.10	76.77 ± 1.58	80.49 ± 11.61	68.76 ± 1.39
VBD	56.33	90.97 ± 0.39	85.68 ± 2.61	70.51 ± 3.50	71.36 ± 4.68	70.25 ± 1.19	60.42 ± 5.43
CC	68.26	91.40 ± 1.10	90.09 ± 0.73	71.91 ± 5.15	68.02 ± 1.40	83.39 ± 2.06	67.49 ± 8.30
VBZ	74.91	92.44 ± 1.68	90.40 ± 1.52	78.07 ± 3.62	80.85 ± 4.49	77.62 ± 7.60	66.56 ± 4.28
VBP	56.63	90.02 ± 2.07	84.35 ± 3.19	72.21 ± 2.09	73.85 ± 3.30	71.60 ± 3.38	60.45 ± 4.76
VBN	53.78	88.81 ± 1.71	74.71 ± 5.55	67.99 ± 1.74	70.24 ± 0.65	76.35 ± 2.29	55.83 ± 2.58
CD	61.67	93.10 ± 1.14	74.84 ± 8.38	88.25 ± 1.81	89.97 ± 1.31	89.95 ± 2.56	66.87 ± 7.68
VBG	65.44	92.63 ± 0.48	85.51 ± 0.25	78.36 ± 3.53	82.53 ± 1.17	82.19 ± 0.78	66.12 ± 3.34
TO	85.24	92.38 ± 1.06	87.95 ± 4.02	83.07 ± 0.41	79.26 ± 5.42	78.24 ± 4.93	74.63 ± 1.02
MD	65.72	92.70 ± 0.69	91.93 ± 0.26	90.69 ± 1.37	90.29 ± 1.67	89.55 ± 1.22	89.29 ± 3.24
PRP$	76.90	92.33 ± 0.89	89.37 ± 0.52	88.84 ± 1.26	86.96 ± 2.95	86.48 ± 2.93	80.86 ± 1.93
UH	75.95	93.66 ± 2.55	87.03 ± 3.38	76.42 ± 0.44	83.97 ± 0.39	85.52 ± 3.24	73.79 ± 1.60
HYPH	90.15	91.98 ± 1.48	92.01 ± 0.76	89.90 ± 0.76	88.20 ± 2.50	92.47 ± 0.65	91.23 ± 1.82
POS	93.01	98.85 ± 0.26	90.80 ± 3.68	98.21 ± 0.23	97.86 ± 1.40	98.37 ± 0.33	92.02 ± 2.30
'	76.84	89.05 ± 4.67	74.25 ± 3.53	77.14 ± 4.32	71.12 ± 0.27	85.48 ± 2.35	70.51 ± 1.51
``	76.98	89.54 ± 0.43	79.12 ± 4.13	81.55 ± 3.49	68.74 ± 1.21	87.44 ± 1.40	69.67 ± 1.15
WDT	68.74	87.26 ± 2.03	85.27 ± 1.94	82.54 ± 1.53	83.23 ± 2.58	80.71 ± 2.00	80.34 ± 4.02
WP	76.18	90.19 ± 0.52	86.99 ± 1.73	81.88 ± 2.91	83.79 ± 0.13	77.35 ± 4.61	75.89 ± 4.40
WRB	72.35	89.15 ± 0.71	87.38 ± 2.60	86.68 ± 4.19	83.99 ± 3.21	79.75 ± 0.84	78.44 ± 1.19
RP	74.33	82.13 ± 1.97	72.20 ± 0.75	79.06 ± 3.83	82.93 ± 2.87	76.13 ± 3.92	71.68 ± 0.64
:	66.48	84.58 ± 2.02	76.22 ± 7.79	85.89 ± 1.27	80.03 ± 2.36	85.33 ± 1.89	84.02 ± 5.32
JJR	56.62	87.18 ± 0.37	71.87 ± 5.09	73.65 ± 3.17	72.29 ± 4.51	72.22 ± 2.04	58.62 ± 2.35
NNPS	72.11	84.39 ± 3.96	75.45 ± 6.48	71.02 ± 2.18	79.74 ± 2.51	79.81 ± 2.58	79.96 ± 4.21
EX	89.25	95.33 ± 0.50	92.18 ± 0.33	90.55 ± 1.17	90.56 ± 1.49	90.77 ± 1.51	88.49 ± 1.23
JJS	58.95	83.41 ± 1.15	77.58 ± 2.15	80.64 ± 2.91	76.57 ± 1.10	79.33 ± 0.67	69.87 ± 3.58
RBR	67.71	87.29 ± 7.47	66.07 ± 0.52	66.07 ± 2.47	69.96 ± 14.87	65.17 ± 7.15	58.00 ± 8.39
-LRB-	83.76	91.54 ± 2.05	89.68 ± 3.88	89.51 ± 1.06	88.83 ± 2.83	88.66 ± 1.06	85.96 ± 3.67
-RRB-	83.67	92.18 ± 1.56	88.78 ± 2.05	88.78 ± 0.88	87.07 ± 2.36	89.97 ± 1.64	86.22 ± 0.51
$	95.38	97.30 ± 1.86	95.38 ± 0.00	94.99 ± 1.20	94.80 ± 2.08	96.92 ± 0.33	94.99 ± 2.33
PDT	84.94	87.15 ± 0.92	83.54 ± 1.93	82.73 ± 1.52	81.12 ± 1.74	84.74 ± 1.25	82.53 ± 1.59
RBS	72.32	86.31 ± 2.87	72.62 ± 5.45	77.68 ± 4.47	71.73 ± 2.73	77.98 ± 1.03	74.41 ± 4.02
FW	64.95	72.51 ± 1.58	65.98 ± 5.45	69.07 ± 6.44	76.97 ± 5.68	68.04 ± 6.76	70.79 ± 1.57
NFP	86.67	90.56 ± 3.47	88.89 ± 2.55	93.33 ± 4.41	90.00 ± 2.89	92.22 ± 3.47	86.67 ± 1.67
WP$	89.47	92.99 ± 1.52	95.62 ± 1.52	94.74 ± 2.63	92.11 ± 4.56	94.74 ± 4.56	92.98 ± 3.04
XX	81.25	83.34 ± 1.81	82.29 ± 3.61	86.46 ± 1.80	83.33 ± 3.61	82.29 ± 3.61	81.25 ± 0.00
SYM	86.67	91.11 ± 3.85	88.89 ± 8.39	94.45 ± 3.85	88.89 ± 1.92	93.33 ± 3.34	91.11 ± 3.85
ADD	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
LS	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
AFX	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00    
    '''
    plt.axhline(y=0, color='r', linewidth=0.5, linestyle='--')
    head = True
    group = defaultdict(dict)
    names = ['BERT', 'NER', 'DEP', 'CON', 'SRL', 'MTL-5']
    headers = ['BERT', 'STL'] + names[1:]
    ss = defaultdict(dict)
    raw = defaultdict(dict)
    nmax = 20
    for line in table.splitlines():
        line = line.strip()
        if not line:
            continue
        cells = line.split('\t')
        if not cells:
            continue
        if head:
            head = False
            continue

        label, scores = cells[0], cells[1:]
        for n, s in zip(headers, scores):
            raw[n][label] = s
        scores = [float(x.split()[0]) for x in scores]
        for n, s in zip(headers, scores):
            ss[n][label] = s
        scores[0], scores[1] = scores[1], scores[0]
        for n, s in zip(names, scores[1:]):
            group[n][label] = s - scores[0]
        # nmax -= 1
        # if not nmax:
        #     break
    texts = []
    xys = defaultdict(lambda: ([], []))
    ng = set()
    for i, (n, scores) in enumerate(group.items()):
        for j, (label, diff) in enumerate(scores.items()):
            # plt.scatter(i + 1, diff)
            xys[label][0].append(i + 1)
            xys[label][1].append(diff)
            if diff > 0:
                ng.add(label)
            # texts.append(plt.text(i + 1, diff, label))
    # colors = prop_cycle.by_key()['color']
    # colors.extend(['r', 'g', 'b', 'c', 'm', 'y'])
    # colors = ['#e6194b', '#3cb44b', '#ffe119', '#4363d8', '#f58231', '#911eb4', '#46f0f0', '#f032e6', '#bcf60c', '#fabebe', '#008080', '#e6beff', '#9a6324', '#fffac8', '#800000', '#aaffc3', '#808000', '#ffd8b1', '#000075', '#808080', '#ffffff', '#000000']
    colors = ['#696969', '#2e8b57', '#800000', '#191970', '#808000', '#ff0000', '#ff8c00', '#ffd700', '#ba55d3',
              '#00fa9a', '#00ffff', '#0000ff', '#adff2f', '#ff00ff', '#1e90ff', '#fa8072', '#eee8aa', '#dda0dd',
              '#ff1493', '#87cefa'] + ['#e6194b', '#3cb44b', '#ffe119', '#4363d8', '#f58231', '#911eb4', '#46f0f0',
                                       '#f032e6', '#bcf60c', '#fabebe', '#008080', '#e6beff', '#9a6324', '#fffac8',
                                       '#800000', '#aaffc3', '#808000', '#ffd8b1', '#000075', '#808080', '#000000']
    print('\t'.join([''] + headers))
    headers[0] = 'STL'
    headers[1] = 'BERT'
    for label in xys.keys():
        cs = ['\\texttt{' + label.replace('$', '\\$') + '}']
        win = max([(g, d[label]) for g,d in ss.items()], key=lambda x:x[-1])[1]
        for g in headers:
            data = ss[g]
            cell = f'{data[label]:.2f}'
            if win == data[label]:
                cell = '\\textbf{' + cell + '}'
            # cell = raw[g][label].replace(' ± ', '$\pm$')
            diff = group[g].get(label, None)
            if diff is not None:
                if diff > 0:
                    cell += '\\posdiff{' + f'{diff:.2f}' + '}'
                else:
                    cell += '\\negdiff{' + f'{diff:.2f}' + '}'
            cs.append(cell)
        print(' & '.join(cs) + ' \\\\ ')
    # exit(0)

    nmax = 20
    for label in xys.keys():
        if len(ng) >= nmax:
            break
        ng.add(label)
    for i, (label, xy) in enumerate(xys.items()):
        plt.scatter(*xy, label=label if label in ng else '_nolegend_', color=colors[i % len(colors)], marker='_',
                    s=300 / (i + 1))
    # adjust_text(texts)
    plt.legend(bbox_to_anchor=(1, 1.01), loc='upper left', labelspacing=0.2, borderpad=0.1, handletextpad=0.1)
    plt.xticks(list(range(1, 1 + len(group))), list(group.keys()))
    # plt.ylabel('Δacc')
    plt.tight_layout()
    # plt.savefig('EMNLP-2021-MTL/fig/pos-acc-diff.pdf')
    plt.show()



if __name__ == '__main__':
    main()
