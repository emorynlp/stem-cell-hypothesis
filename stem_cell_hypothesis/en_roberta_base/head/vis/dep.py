# -*- coding:utf-8 -*-
# Author: hankcs
# Date: 2021-05-11 19:50
import os
from collections import defaultdict

import matplotlib.pyplot as plt

prop_cycle = plt.rcParams['axes.prop_cycle']
plt.rcParams["figure.figsize"] = (4, 3)
plt.rcParams.update({'font.size': 8})

def main():
    table = '''
	static	single	pos	ner	con	srl	joint
prep	65.88	66.74 ± 1.47	65.89 ± 0.02	65.97 ± 0.01	69.31 ± 2.48	75.95 ± 3.04	74.44 ± 0.08
pobj	74.28	94.90 ± 1.13	89.72 ± 0.61	88.72 ± 2.13	87.64 ± 0.54	83.48 ± 0.56	82.99 ± 0.81
nsubj	51.98	69.63 ± 2.70	67.49 ± 4.76	64.49 ± 3.32	59.02 ± 0.68	61.89 ± 2.67	56.29 ± 0.34
det	76.73	91.01 ± 1.53	88.40 ± 0.80	89.83 ± 0.81	96.32 ± 0.61	95.44 ± 1.27	87.92 ± 0.93
root	31.74	94.62 ± 2.22	94.64 ± 1.41	94.04 ± 1.53	77.94 ± 4.76	86.31 ± 1.60	70.01 ± 0.31
nn	69.26	81.72 ± 1.23	76.35 ± 1.61	77.86 ± 0.33	81.88 ± 1.00	84.03 ± 1.74	75.96 ± 0.60
amod	75.56	88.02 ± 1.00	84.98 ± 1.16	86.50 ± 0.16	86.49 ± 0.20	86.59 ± 1.91	83.08 ± 1.55
dobj	63.59	93.53 ± 1.87	89.54 ± 1.89	92.58 ± 0.49	86.66 ± 1.95	82.22 ± 0.13	74.02 ± 1.26
advmod	53.13	63.74 ± 0.44	63.19 ± 0.89	62.97 ± 1.56	63.66 ± 0.27	63.07 ± 1.95	61.17 ± 0.91
aux	75.26	89.56 ± 1.16	86.56 ± 1.93	88.25 ± 0.82	87.85 ± 2.86	84.27 ± 1.19	82.42 ± 1.22
cc	37.75	45.31 ± 1.82	45.41 ± 0.69	44.41 ± 2.38	43.49 ± 2.52	40.12 ± 1.56	43.95 ± 0.97
conj	50.84	53.83 ± 0.58	51.34 ± 0.57	53.82 ± 1.10	52.74 ± 0.90	52.86 ± 0.78	50.15 ± 0.37
dep	27.56	32.01 ± 0.70	31.13 ± 0.65	31.12 ± 0.61	32.70 ± 0.53	32.10 ± 0.24	30.15 ± 0.76
poss	66.19	79.50 ± 0.14	75.01 ± 1.56	72.75 ± 0.68	85.06 ± 6.65	83.96 ± 5.75	71.74 ± 1.37
ccomp	22.77	35.26 ± 1.77	36.28 ± 1.86	37.69 ± 0.38	34.83 ± 0.37	39.87 ± 2.98	36.16 ± 0.24
cop	65.75	85.28 ± 0.82	84.33 ± 1.35	85.17 ± 4.09	83.51 ± 2.88	81.48 ± 0.70	79.00 ± 1.58
mark	45.31	89.95 ± 0.77	85.90 ± 1.47	88.90 ± 1.05	86.77 ± 0.94	86.08 ± 0.96	82.38 ± 2.75
xcomp	50.25	67.12 ± 1.89	62.17 ± 2.79	64.35 ± 0.67	63.17 ± 1.69	64.09 ± 2.23	58.40 ± 2.20
num	75.32	85.75 ± 0.26	82.44 ± 3.01	83.35 ± 0.03	83.90 ± 1.64	84.75 ± 1.00	80.60 ± 0.66
rcmod	27.35	36.31 ± 1.97	35.13 ± 1.88	33.92 ± 1.83	34.79 ± 1.73	46.48 ± 7.12	34.25 ± 0.65
advcl	21.36	20.39 ± 2.13	19.52 ± 1.90	20.89 ± 1.85	20.77 ± 1.52	19.63 ± 1.86	20.89 ± 2.09
neg	74.86	79.48 ± 4.42	83.26 ± 4.17	80.20 ± 4.52	76.04 ± 1.42	81.52 ± 4.47	76.63 ± 0.57
auxpass	90.61	97.23 ± 0.89	97.28 ± 0.42	95.79 ± 0.80	97.34 ± 0.50	95.29 ± 1.29	93.38 ± 1.18
nsubjpass	43.84	57.15 ± 1.91	54.41 ± 2.95	53.10 ± 2.46	54.06 ± 1.49	59.76 ± 4.67	50.43 ± 1.00
possessive	99.13	99.23 ± 0.00	99.23 ± 0.00	99.23 ± 0.00	99.23 ± 0.00	99.16 ± 0.06	99.23 ± 0.00
pcomp	73.59	77.94 ± 2.61	74.70 ± 0.60	78.62 ± 3.74	75.90 ± 0.99	75.97 ± 1.07	75.50 ± 0.70
discourse	33.51	56.92 ± 1.38	46.20 ± 11.12	43.04 ± 3.04	39.77 ± 6.53	55.12 ± 3.00	47.70 ± 2.44
partmod	47.21	52.09 ± 0.37	53.95 ± 1.11	53.81 ± 0.21	56.04 ± 0.57	58.45 ± 0.58	57.61 ± 1.26
appos	33.58	35.03 ± 0.89	31.73 ± 2.37	33.48 ± 2.34	32.94 ± 1.33	33.28 ± 0.63	31.82 ± 0.81
prt	92.58	96.64 ± 0.22	95.70 ± 0.15	96.44 ± 0.51	96.24 ± 0.09	96.04 ± 1.09	96.04 ± 0.45
number	74.95	78.72 ± 4.84	76.33 ± 0.55	75.02 ± 0.55	75.96 ± 0.67	75.67 ± 0.66	75.82 ± 0.66
quantmod	69.90	69.18 ± 0.88	68.93 ± 0.49	69.42 ± 1.06	72.74 ± 3.23	74.19 ± 2.83	70.55 ± 0.51
parataxis	19.84	19.49 ± 0.67	20.11 ± 1.06	25.22 ± 0.55	20.28 ± 0.15	19.49 ± 1.00	22.93 ± 1.46
infmod	49.07	65.25 ± 0.31	60.36 ± 1.73	65.25 ± 3.74	59.82 ± 1.34	61.69 ± 1.93	60.09 ± 2.67
tmod	38.74	61.63 ± 3.74	59.34 ± 1.10	66.11 ± 1.27	63.74 ± 3.43	67.31 ± 2.07	60.90 ± 3.89
expl	83.01	85.29 ± 0.86	84.75 ± 0.19	85.08 ± 0.18	83.55 ± 0.19	83.88 ± 0.19	83.66 ± 0.33
mwe	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
npadvmod	72.02	76.61 ± 1.65	75.23 ± 0.92	75.69 ± 1.38	80.13 ± 0.27	77.67 ± 0.27	77.22 ± 0.70
iobj	69.57	97.83 ± 1.63	93.12 ± 2.06	97.10 ± 0.63	95.66 ± 1.88	93.48 ± 2.18	88.95 ± 2.57
predet	67.70	86.13 ± 1.80	80.12 ± 4.30	86.34 ± 6.48	81.57 ± 2.18	84.47 ± 3.11	80.54 ± 0.36
acomp	76.43	87.90 ± 0.64	88.54 ± 0.64	88.75 ± 0.97	87.26 ± 2.30	83.86 ± 1.33	83.86 ± 0.73
csubj	31.90	44.25 ± 1.00	43.10 ± 1.73	40.52 ± 1.50	40.52 ± 3.76	43.68 ± 3.26	39.66 ± 3.76
preconj	56.52	65.94 ± 1.25	60.15 ± 8.79	65.22 ± 4.35	71.74 ± 7.84	83.33 ± 6.64	71.02 ± 10.94
csubjpass	66.67	66.67 ± 0.00	66.67 ± 0.00	66.67 ± 0.00	66.67 ± 0.00	77.78 ± 19.24	66.67 ± 0.00	
    '''
    plt.axhline(y=0, color='r', linewidth=0.5, linestyle='--')
    head = True
    group = defaultdict(dict)
    names = ['RoBERTa', 'POS', 'NER', 'CON', 'SRL', 'MTL-5']
    nmax = 20
    c = 0
    for line in table.splitlines():
        line = line.strip()
        if not line:
            continue
        cells = line.split('\t')
        if not cells:
            continue
        if head:
            head = False
            continue

        label, scores = cells[0], cells[1:]
        scores = [float(x.split()[0]) for x in scores]
        scores[0], scores[1] = scores[1], scores[0]
        for n, s in zip(names, scores[1:]):
            group[n][label] = s - scores[0]
        # c += 1
        # if c == nmax:
        #     break
    texts = []
    xys = defaultdict(lambda: ([], []))
    for i, (n, scores) in enumerate(group.items()):
        for j, (label, diff) in enumerate(scores.items()):
            # plt.scatter(i + 1, diff)
            xys[label][0].append(i + 1)
            xys[label][1].append(diff)
            # texts.append(plt.text(i + 1, diff, label))
    # colors = prop_cycle.by_key()['color']
    # colors.extend(['r', 'g', 'b', 'c', 'm', 'y'])
    # colors = ['#e6194b', '#3cb44b', '#ffe119', '#4363d8', '#f58231', '#911eb4', '#46f0f0', '#f032e6', '#bcf60c', '#fabebe', '#008080', '#e6beff', '#9a6324', '#fffac8', '#800000', '#aaffc3', '#808000', '#ffd8b1', '#000075', '#808080', '#ffffff', '#000000']
    colors = ['#696969', '#2e8b57', '#800000', '#191970', '#808000', '#ff0000', '#ff8c00', '#ffd700', '#ba55d3',
              '#00fa9a', '#00ffff', '#0000ff', '#adff2f', '#ff00ff', '#1e90ff', '#fa8072', '#eee8aa', '#dda0dd',
              '#ff1493', '#87cefa']
    for i, (label, xy) in enumerate(xys.items()):
        label = label[:4]
        plt.scatter(*xy, label=label if i < nmax else '_nolegend_', color=colors[i % len(colors)], marker='_', s=300/(i+1))
    # adjust_text(texts)
    # plt.axhline(y=0, color='r', linewidth=0.5, linestyle='--')
    plt.legend(bbox_to_anchor=(1, 1.01), loc='upper left', labelspacing=0.2, borderpad=0.1, handletextpad=0.1)
    plt.xticks(list(range(1, 1 + len(group))), list(group.keys()))
    # plt.ylabel('Δacc')
    plt.tight_layout()
    pdf = 'EMNLP-2021-MTL/fig/roberta/dep-acc-diff.pdf'
    os.makedirs(os.path.dirname(pdf), exist_ok=True)
    plt.savefig(pdf)
    plt.show()


if __name__ == '__main__':
    main()
