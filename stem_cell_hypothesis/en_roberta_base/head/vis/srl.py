# -*- coding:utf-8 -*-
# Author: hankcs
# Date: 2021-05-11 19:50
import os
from collections import defaultdict

import matplotlib.pyplot as plt

prop_cycle = plt.rcParams['axes.prop_cycle']
plt.rcParams["figure.figsize"] = (4, 3)
plt.rcParams.update({'font.size': 8})

def main():
    table = '''
	static	single	pos	ner	dep	con	joint
ARG1	67.32	77.87 ± 2.91	70.18 ± 0.52	70.13 ± 0.11	70.05 ± 0.12	70.75 ± 0.35	69.91 ± 0.21
ARG0	66.61	73.61 ± 3.27	71.64 ± 1.03	70.25 ± 3.77	69.93 ± 0.85	71.21 ± 1.15	63.19 ± 1.01
ARG2	74.46	91.65 ± 0.39	84.78 ± 4.49	78.91 ± 1.55	78.61 ± 0.34	81.81 ± 3.58	82.51 ± 0.88
ARGM-TMP	36.29	71.96 ± 2.46	59.94 ± 2.87	54.02 ± 4.69	57.19 ± 3.82	55.81 ± 1.58	49.09 ± 1.68
ARGM-DIS	42.59	75.37 ± 11.54	74.22 ± 2.69	62.37 ± 5.68	75.05 ± 3.10	53.89 ± 2.25	60.13 ± 2.11
ARGM-ADV	34.37	54.80 ± 4.78	45.68 ± 3.60	42.28 ± 6.68	45.35 ± 3.82	45.37 ± 0.59	35.96 ± 0.36
ARGM-MOD	67.44	84.28 ± 5.99	86.38 ± 3.51	79.37 ± 5.10	83.75 ± 2.78	77.06 ± 1.98	77.95 ± 1.89
ARGM-LOC	50.76	76.46 ± 4.07	71.02 ± 2.25	74.87 ± 3.99	71.17 ± 4.08	75.02 ± 1.39	63.80 ± 1.71
ARGM-MNR	56.46	84.27 ± 1.14	66.20 ± 5.84	61.02 ± 2.13	64.16 ± 3.07	65.91 ± 1.79	59.05 ± 1.07
ARGM-NEG	82.73	88.04 ± 3.99	84.21 ± 0.32	83.06 ± 1.51	85.38 ± 1.63	83.82 ± 0.46	84.42 ± 0.23
R-ARG1	61.40	73.67 ± 2.63	58.25 ± 0.82	57.65 ± 1.06	66.88 ± 5.47	57.11 ± 1.38	62.11 ± 2.21
R-ARG0	68.31	81.71 ± 1.36	68.31 ± 1.33	71.66 ± 4.32	73.43 ± 1.20	65.70 ± 0.49	69.56 ± 3.35
C-ARG1	37.73	39.96 ± 1.83	38.07 ± 0.42	38.54 ± 1.08	38.07 ± 0.31	39.55 ± 1.76	38.68 ± 0.65
ARGM-PRP	65.00	77.54 ± 3.06	73.41 ± 5.26	76.35 ± 3.95	79.21 ± 1.39	74.68 ± 3.51	73.02 ± 1.67
ARGM-DIR	85.00	91.03 ± 0.96	85.32 ± 2.20	88.89 ± 3.58	86.11 ± 2.78	84.37 ± 1.31	82.86 ± 0.63
ARG3	70.32	87.43 ± 1.87	80.57 ± 5.28	78.43 ± 1.32	74.87 ± 1.85	75.58 ± 2.18	77.10 ± 1.47
ARG4	82.14	90.29 ± 2.55	86.81 ± 3.34	93.95 ± 2.18	87.92 ± 2.87	85.99 ± 4.04	84.25 ± 3.09
ARGM-CAU	55.65	56.50 ± 1.85	56.03 ± 3.00	56.59 ± 2.83	68.64 ± 2.83	57.72 ± 2.08	59.70 ± 2.69
ARGM-PRD	43.58	54.86 ± 5.06	48.90 ± 3.17	51.88 ± 2.82	49.81 ± 4.72	53.31 ± 3.19	48.77 ± 0.60
ARGM-ADJ	63.60	85.33 ± 0.83	80.27 ± 1.51	78.67 ± 1.89	79.07 ± 2.01	78.93 ± 0.61	75.73 ± 1.89
ARGM-EXT	79.08	86.27 ± 1.73	81.26 ± 1.36	81.48 ± 1.65	83.66 ± 1.13	82.35 ± 1.31	82.14 ± 2.10
ARGM-PNC	75.00	86.84 ± 2.63	82.02 ± 2.74	88.16 ± 2.63	85.53 ± 2.64	80.26 ± 3.95	79.39 ± 0.76
ARGM-GOL	61.64	79.91 ± 2.85	74.43 ± 2.09	78.54 ± 3.45	77.62 ± 2.85	78.54 ± 2.85	71.23 ± 1.37
ARGM-LVB	84.51	99.53 ± 0.81	98.12 ± 0.81	98.12 ± 1.63	99.06 ± 0.81	97.18 ± 1.41	96.71 ± 3.25
R-ARGM-LOC	50.77	75.38 ± 2.66	72.82 ± 3.20	81.54 ± 5.55	73.85 ± 4.62	73.33 ± 5.40	77.44 ± 3.87
R-ARGM-TMP	65.08	73.54 ± 7.99	61.91 ± 4.20	76.72 ± 4.85	84.12 ± 2.75	74.07 ± 6.01	80.42 ± 2.42
R-ARG2	61.29	72.04 ± 5.18	72.04 ± 3.36	68.28 ± 4.06	67.74 ± 3.23	69.89 ± 6.71	66.67 ± 0.93
C-ARG2	32.65	35.37 ± 1.18	34.69 ± 2.04	36.05 ± 4.25	34.69 ± 2.04	38.10 ± 3.12	38.10 ± 3.12
C-ARG0	50.00	48.04 ± 4.49	47.06 ± 2.94	48.04 ± 1.70	47.06 ± 0.00	48.04 ± 1.70	50.98 ± 6.79
ARGM-REC	58.82	80.39 ± 6.80	64.70 ± 7.78	63.73 ± 1.70	63.72 ± 8.99	62.74 ± 1.70	63.72 ± 3.40
ARGM-COM	77.78	85.19 ± 3.71	88.89 ± 3.70	83.95 ± 2.14	86.42 ± 2.14	85.19 ± 3.71	87.66 ± 4.27
C-ARGM-ADV	54.55	45.45 ± 0.00	54.55 ± 9.10	45.45 ± 0.00	48.48 ± 5.25	51.52 ± 5.25	42.42 ± 5.25
R-ARGM-MNR	63.64	63.64 ± 0.00	54.55 ± 0.00	63.64 ± 15.74	69.70 ± 10.50	60.61 ± 5.25	72.73 ± 0.00
ARG5	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
C-ARGM-TMP	28.57	38.09 ± 16.49	42.86 ± 0.00	38.10 ± 8.25	47.62 ± 8.24	38.10 ± 8.25	38.10 ± 8.25
R-ARGM-CAU	100.00	66.67 ± 14.43	58.33 ± 14.43	91.67 ± 14.43	100.00 ± 0.00	75.00 ± 0.00	75.00 ± 25.00
C-ARGM-CAU	66.67	66.67 ± 0.00	66.67 ± 33.34	66.67 ± 0.00	77.78 ± 19.24	66.67 ± 0.00	66.67 ± 0.00
C-ARG3	66.67	66.67 ± 0.00	66.67 ± 0.00	66.67 ± 0.00	66.67 ± 0.00	66.67 ± 0.00	66.67 ± 0.00
R-ARG4	100.00	100.00 ± 0.00	88.89 ± 19.24	100.00 ± 0.00	88.89 ± 19.24	100.00 ± 0.00	88.89 ± 19.24
C-ARGM-EXT	66.67	100.00 ± 0.00	77.78 ± 19.24	88.89 ± 19.24	77.78 ± 19.24	77.78 ± 19.24	77.78 ± 19.24
R-ARGM-ADV	100.00	83.33 ± 28.87	66.67 ± 28.87	83.33 ± 28.87	83.33 ± 28.87	66.67 ± 28.87	50.00 ± 0.00
C-ARGM-LOC	50.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
C-ARGM-MNR	50.00	100.00 ± 0.00	100.00 ± 0.00	50.00 ± 0.00	66.67 ± 28.87	100.00 ± 0.00	100.00 ± 0.00
C-ARGM-MOD	100.00	83.33 ± 28.87	83.33 ± 28.87	66.67 ± 28.87	83.33 ± 28.87	83.33 ± 28.87	66.67 ± 28.87
R-ARGM-PRP	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
ARGM-PRX	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
ARGA	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
R-ARGM-DIR	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
R-ARGM-PRD	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
C-ARGM-PRD	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
R-ARGM-EXT	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
C-ARGM-PRP	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
R-ARG3	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
ARGM-PRR	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
ARGM-DSP	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	
    '''
    plt.axhline(y=0, color='r', linewidth=0.5, linestyle='--')
    head = True
    group = defaultdict(dict)
    names = ['RoBERTa', 'POS', 'NER', 'DEP', 'CON', 'MTL-5']
    nmax = 20
    c = 0
    for line in table.splitlines():
        line = line.strip()
        if not line:
            continue
        cells = line.split('\t')
        if not cells:
            continue
        if head:
            head = False
            continue

        label, scores = cells[0], cells[1:]
        scores = [float(x.split()[0]) for x in scores]
        scores[0], scores[1] = scores[1], scores[0]
        for n, s in zip(names, scores[1:]):
            group[n][label] = s - scores[0]
        # c += 1
        # if c == nmax:
        #     break
    texts = []
    xys = defaultdict(lambda: ([], []))
    for i, (n, scores) in enumerate(group.items()):
        for j, (label, diff) in enumerate(scores.items()):
            # plt.scatter(i + 1, diff)
            # xys[label][0].append(i + 1)
            # xys[label][1].append(diff-0.025)
            xys[label][0].append(i + 1)
            xys[label][1].append(diff)
            # xys[label][0].append(i + 1)
            # xys[label][1].append(diff+0.025)
            # texts.append(plt.text(i + 1, diff, label))
    # colors = prop_cycle.by_key()['color']
    # colors.extend(['r', 'g', 'b', 'c', 'm', 'y'])
    # colors = ['#e6194b', '#3cb44b', '#ffe119', '#4363d8', '#f58231', '#911eb4', '#46f0f0', '#f032e6', '#bcf60c', '#fabebe', '#008080', '#e6beff', '#9a6324', '#fffac8', '#800000', '#aaffc3', '#808000', '#ffd8b1', '#000075', '#808080', '#ffffff', '#000000']
    colors = ['#696969', '#2e8b57', '#800000', '#191970', '#808000', '#ff0000', '#ff8c00', '#ffd700', '#ba55d3',
              '#00fa9a', '#00ffff', '#0000ff', '#adff2f', '#ff00ff', '#1e90ff', '#fa8072', '#eee8aa', '#dda0dd',
              '#ff1493', '#87cefa']
    for i, (label, xy) in enumerate(xys.items()):
        # label = {
        #     'ARG0': 'A0',
        #     'ARG1': 'A1',
        #     'ARG2': 'A2',
        #     'ARG3': 'A3',
        #     'ARG4': 'A4',
        # }.get(label, label)
        label = label.replace('ARGM-', 'M-')
        label = label.replace('-ARG', '-A')
        plt.scatter(*xy, label=label if i < nmax else '_nolegend_', color=colors[i % len(colors)], marker='_', s=300/(i+1))
    # adjust_text(texts)
    # plt.axhline(y=0, color='r', linewidth=0.5, linestyle='--')
    plt.legend(bbox_to_anchor=(1, 1.01), loc='upper left', labelspacing=0.2, borderpad=0.1, handletextpad=0.1)
    plt.xticks(list(range(1, 1 + len(group))), list(group.keys()))
    # plt.ylabel('Δacc')
    plt.tight_layout()
    pdf = 'EMNLP-2021-MTL/fig/roberta/srl-acc-diff.pdf'
    os.makedirs(os.path.dirname(pdf), exist_ok=True)
    plt.savefig(pdf)
    plt.show()


if __name__ == '__main__':
    main()
