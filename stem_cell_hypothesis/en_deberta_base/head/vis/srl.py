# -*- coding:utf-8 -*-
# Author: hankcs
# Date: 2021-05-11 19:50
import os
from collections import defaultdict

import matplotlib.pyplot as plt

prop_cycle = plt.rcParams['axes.prop_cycle']
plt.rcParams["figure.figsize"] = (4, 3)
plt.rcParams.update({'font.size': 8})

def main():
    table = '''
	static	single	pos	ner	dep	con	joint
ARG1	74.37	79.02 ± 1.59	79.38 ± 1.81	80.65 ± 2.91	79.43 ± 1.26	79.73 ± 1.23	76.10 ± 0.72
ARG0	78.99	76.86 ± 0.97	76.23 ± 1.50	76.23 ± 1.62	73.55 ± 0.65	75.77 ± 0.73	72.71 ± 0.67
ARG2	77.84	86.66 ± 0.58	83.66 ± 0.70	83.67 ± 2.40	84.45 ± 1.80	87.84 ± 1.28	83.84 ± 0.20
ARGM-TMP	58.64	70.48 ± 0.83	66.19 ± 0.72	66.38 ± 1.38	72.64 ± 1.74	68.25 ± 1.78	65.05 ± 0.22
ARGM-DIS	46.26	74.34 ± 3.08	64.79 ± 6.02	70.50 ± 4.11	77.93 ± 0.95	64.22 ± 2.94	54.53 ± 2.48
ARGM-ADV	40.02	60.55 ± 3.34	54.74 ± 2.50	58.09 ± 4.35	66.84 ± 0.80	57.98 ± 2.67	58.14 ± 1.25
ARGM-MOD	66.35	78.89 ± 5.13	74.25 ± 1.99	77.80 ± 1.81	85.50 ± 1.34	82.43 ± 3.27	86.54 ± 3.03
ARGM-LOC	64.26	77.69 ± 0.45	77.04 ± 2.89	77.62 ± 2.71	78.17 ± 0.55	79.86 ± 1.52	76.20 ± 1.88
ARGM-MNR	66.98	80.32 ± 3.06	76.70 ± 2.92	82.23 ± 5.36	81.67 ± 2.03	78.06 ± 0.94	74.41 ± 3.53
ARGM-NEG	84.45	83.43 ± 1.27	83.85 ± 0.50	83.00 ± 0.16	83.79 ± 0.10	83.91 ± 0.57	83.43 ± 1.56
R-ARG1	63.36	70.85 ± 4.59	65.31 ± 1.63	66.99 ± 2.93	68.40 ± 2.78	69.82 ± 0.93	71.28 ± 2.37
R-ARG0	65.93	73.54 ± 2.48	71.55 ± 3.76	72.86 ± 3.67	83.42 ± 0.52	75.52 ± 2.90	79.44 ± 3.05
C-ARG1	47.06	47.94 ± 2.89	47.94 ± 2.68	46.86 ± 1.53	47.60 ± 2.24	46.52 ± 2.28	45.03 ± 1.46
ARGM-PRP	73.57	75.95 ± 1.80	74.68 ± 3.57	76.43 ± 4.68	72.86 ± 1.48	76.59 ± 1.59	76.59 ± 0.36
ARGM-DIR	86.19	92.62 ± 1.49	92.46 ± 3.01	93.41 ± 1.72	93.02 ± 0.73	93.02 ± 1.62	91.11 ± 1.85
ARG3	80.48	90.11 ± 3.26	88.50 ± 3.03	89.75 ± 2.42	89.39 ± 0.16	91.62 ± 1.47	85.03 ± 0.54
ARG4	83.24	95.97 ± 0.69	94.32 ± 1.41	94.41 ± 1.11	94.69 ± 0.79	94.87 ± 1.35	93.68 ± 0.99
ARGM-CAU	60.17	69.02 ± 2.12	66.76 ± 0.99	67.80 ± 1.76	74.39 ± 1.61	72.50 ± 4.68	69.68 ± 1.18
ARGM-PRD	56.42	71.47 ± 1.19	66.80 ± 1.12	67.18 ± 5.31	66.54 ± 1.17	65.37 ± 2.17	66.67 ± 1.47
ARGM-ADJ	83.20	86.67 ± 1.01	83.20 ± 1.60	82.93 ± 0.46	86.40 ± 1.39	85.33 ± 0.46	81.33 ± 1.97
ARGM-EXT	83.66	91.29 ± 2.72	89.54 ± 2.62	89.32 ± 4.82	88.24 ± 0.00	87.58 ± 1.73	84.09 ± 1.65
ARGM-PNC	78.95	85.09 ± 1.52	85.52 ± 4.74	83.33 ± 1.52	84.21 ± 1.32	88.16 ± 3.95	81.58 ± 2.63
ARGM-GOL	73.97	84.02 ± 1.58	84.47 ± 4.40	87.67 ± 0.00	83.56 ± 1.37	88.58 ± 3.45	84.47 ± 2.09
ARGM-LVB	97.18	97.65 ± 2.15	94.83 ± 2.93	94.83 ± 2.93	98.12 ± 0.81	97.65 ± 0.81	98.12 ± 2.15
R-ARGM-LOC	69.23	80.00 ± 3.08	86.15 ± 6.71	87.18 ± 4.94	79.49 ± 2.35	78.97 ± 3.21	80.51 ± 3.21
R-ARGM-TMP	69.84	73.54 ± 3.30	74.08 ± 7.83	76.72 ± 4.85	82.01 ± 4.58	75.66 ± 8.74	83.60 ± 4.85
R-ARG2	62.90	74.19 ± 3.23	72.04 ± 2.46	74.73 ± 0.94	71.50 ± 2.46	74.73 ± 3.72	74.20 ± 2.79
C-ARG2	44.90	40.82 ± 2.04	44.22 ± 1.18	40.14 ± 3.12	44.22 ± 1.18	45.58 ± 6.23	38.77 ± 3.54
C-ARG0	52.94	66.67 ± 1.70	66.67 ± 4.50	63.73 ± 1.70	68.63 ± 7.40	73.53 ± 0.00	64.70 ± 10.61
ARGM-REC	82.35	86.28 ± 6.13	82.35 ± 2.94	82.35 ± 5.09	89.22 ± 1.70	83.33 ± 6.12	83.33 ± 1.70
ARGM-COM	88.89	88.89 ± 3.70	91.36 ± 2.14	90.13 ± 5.66	85.19 ± 0.00	88.89 ± 0.00	88.89 ± 0.00
C-ARGM-ADV	45.45	57.58 ± 5.25	51.52 ± 5.25	57.58 ± 5.25	57.58 ± 13.89	57.58 ± 5.25	54.55 ± 9.10
R-ARGM-MNR	63.64	66.67 ± 5.25	63.64 ± 9.09	69.70 ± 13.89	72.73 ± 0.00	75.76 ± 5.25	72.73 ± 9.09
ARG5	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
C-ARGM-TMP	42.86	38.10 ± 8.25	42.86 ± 0.00	47.62 ± 8.24	47.62 ± 8.24	52.38 ± 8.24	57.14 ± 0.00
R-ARGM-CAU	75.00	91.67 ± 14.43	75.00 ± 0.00	75.00 ± 0.00	83.33 ± 14.43	100.00 ± 0.00	100.00 ± 0.00
C-ARGM-CAU	66.67	44.44 ± 19.25	66.67 ± 0.00	55.56 ± 19.25	55.56 ± 19.25	66.67 ± 0.00	55.56 ± 19.25
C-ARG3	66.67	88.89 ± 19.24	77.78 ± 19.24	100.00 ± 0.00	100.00 ± 0.00	77.78 ± 19.24	88.89 ± 19.24
R-ARG4	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
C-ARGM-EXT	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
R-ARGM-ADV	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
C-ARGM-LOC	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
C-ARGM-MNR	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
C-ARGM-MOD	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
R-ARGM-PRP	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
ARGM-PRX	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
ARGA	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
R-ARGM-DIR	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
R-ARGM-PRD	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
C-ARGM-PRD	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
R-ARGM-EXT	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
C-ARGM-PRP	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
R-ARG3	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
ARGM-PRR	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
ARGM-DSP	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	
    '''
    plt.axhline(y=0, color='r', linewidth=0.5, linestyle='--')
    head = True
    group = defaultdict(dict)
    names = ['DeBERTa', 'POS', 'NER', 'DEP', 'CON', 'MTL-5']
    nmax = 20
    c = 0
    for line in table.splitlines():
        line = line.strip()
        if not line:
            continue
        cells = line.split('\t')
        if not cells:
            continue
        if head:
            head = False
            continue

        label, scores = cells[0], cells[1:]
        scores = [float(x.split()[0]) for x in scores]
        scores[0], scores[1] = scores[1], scores[0]
        for n, s in zip(names, scores[1:]):
            group[n][label] = s - scores[0]
        # c += 1
        # if c == nmax:
        #     break
    texts = []
    xys = defaultdict(lambda: ([], []))
    for i, (n, scores) in enumerate(group.items()):
        for j, (label, diff) in enumerate(scores.items()):
            # plt.scatter(i + 1, diff)
            # xys[label][0].append(i + 1)
            # xys[label][1].append(diff-0.025)
            xys[label][0].append(i + 1)
            xys[label][1].append(diff)
            # xys[label][0].append(i + 1)
            # xys[label][1].append(diff+0.025)
            # texts.append(plt.text(i + 1, diff, label))
    # colors = prop_cycle.by_key()['color']
    # colors.extend(['r', 'g', 'b', 'c', 'm', 'y'])
    # colors = ['#e6194b', '#3cb44b', '#ffe119', '#4363d8', '#f58231', '#911eb4', '#46f0f0', '#f032e6', '#bcf60c', '#fabebe', '#008080', '#e6beff', '#9a6324', '#fffac8', '#800000', '#aaffc3', '#808000', '#ffd8b1', '#000075', '#808080', '#ffffff', '#000000']
    colors = ['#696969', '#2e8b57', '#800000', '#191970', '#808000', '#ff0000', '#ff8c00', '#ffd700', '#ba55d3',
              '#00fa9a', '#00ffff', '#0000ff', '#adff2f', '#ff00ff', '#1e90ff', '#fa8072', '#eee8aa', '#dda0dd',
              '#ff1493', '#87cefa']
    for i, (label, xy) in enumerate(xys.items()):
        # label = {
        #     'ARG0': 'A0',
        #     'ARG1': 'A1',
        #     'ARG2': 'A2',
        #     'ARG3': 'A3',
        #     'ARG4': 'A4',
        # }.get(label, label)
        label = label.replace('ARGM-', 'M-')
        label = label.replace('-ARG', '-A')
        plt.scatter(*xy, label=label if i < nmax else '_nolegend_', color=colors[i % len(colors)], marker='_', s=300/(i+1))
    # adjust_text(texts)
    # plt.axhline(y=0, color='r', linewidth=0.5, linestyle='--')
    plt.legend(bbox_to_anchor=(1, 1.01), loc='upper left', labelspacing=0.2, borderpad=0.1, handletextpad=0.1)
    plt.xticks(list(range(1, 1 + len(group))), list(group.keys()))
    # plt.ylabel('Δacc')
    plt.tight_layout()
    pdf = 'EMNLP-2021-MTL/fig/deberta/srl-acc-diff.pdf'
    os.makedirs(os.path.dirname(pdf), exist_ok=True)
    plt.savefig(pdf)
    plt.show()


if __name__ == '__main__':
    main()
