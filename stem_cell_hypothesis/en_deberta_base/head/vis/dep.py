# -*- coding:utf-8 -*-
# Author: hankcs
# Date: 2021-05-11 19:50
import os
from collections import defaultdict

import matplotlib.pyplot as plt

prop_cycle = plt.rcParams['axes.prop_cycle']
plt.rcParams["figure.figsize"] = (4, 3)
plt.rcParams.update({'font.size': 8})

def main():
    table = '''
	static	single	pos	ner	con	srl	joint
prep	69.96	80.09 ± 1.70	81.83 ± 0.57	79.87 ± 0.26	83.87 ± 1.28	85.05 ± 0.96	80.55 ± 1.96
pobj	80.10	93.03 ± 0.37	93.33 ± 2.55	87.65 ± 2.34	91.28 ± 1.27	88.53 ± 1.34	81.97 ± 0.64
nsubj	60.05	86.85 ± 0.77	84.72 ± 0.46	87.11 ± 1.14	73.19 ± 1.72	73.73 ± 1.62	67.83 ± 1.85
det	79.67	95.14 ± 1.77	95.66 ± 1.17	94.08 ± 1.19	93.40 ± 0.66	84.01 ± 1.30	83.31 ± 1.12
root	96.76	92.31 ± 1.44	93.07 ± 1.86	92.75 ± 1.47	86.82 ± 3.35	91.47 ± 2.50	84.83 ± 3.79
nn	79.23	86.23 ± 0.35	88.80 ± 1.23	86.63 ± 0.97	85.44 ± 1.41	82.96 ± 1.67	83.01 ± 2.87
amod	86.21	89.30 ± 0.63	88.95 ± 0.67	87.42 ± 1.10	87.08 ± 0.97	87.64 ± 0.96	85.01 ± 0.49
dobj	71.50	95.36 ± 0.43	93.43 ± 1.22	93.92 ± 0.62	94.63 ± 1.14	89.06 ± 0.18	88.02 ± 1.95
advmod	57.94	80.82 ± 1.93	80.93 ± 1.45	82.17 ± 1.37	69.09 ± 1.00	75.73 ± 1.40	69.30 ± 1.44
aux	76.40	97.08 ± 0.53	94.59 ± 0.66	97.41 ± 0.60	89.24 ± 1.39	93.66 ± 0.33	88.25 ± 1.94
cc	41.80	56.15 ± 0.86	55.39 ± 3.98	55.56 ± 2.72	63.21 ± 5.38	65.80 ± 2.85	56.90 ± 4.65
conj	61.58	72.62 ± 1.03	68.07 ± 1.16	72.61 ± 1.86	73.53 ± 1.18	72.81 ± 0.91	69.41 ± 0.74
dep	34.80	55.12 ± 1.72	53.30 ± 1.66	50.86 ± 1.63	53.85 ± 2.93	48.27 ± 3.61	46.49 ± 1.11
poss	71.38	77.19 ± 1.63	75.58 ± 3.84	81.83 ± 1.26	83.02 ± 5.83	81.62 ± 2.60	74.92 ± 2.70
ccomp	39.66	74.48 ± 7.98	59.43 ± 4.50	67.03 ± 5.36	65.46 ± 3.61	64.42 ± 2.89	56.90 ± 1.95
cop	74.95	95.01 ± 0.85	87.91 ± 3.52	93.53 ± 0.47	91.20 ± 3.78	82.80 ± 3.07	74.84 ± 1.59
mark	52.38	91.76 ± 1.57	87.61 ± 1.79	91.04 ± 1.13	90.03 ± 1.48	88.95 ± 0.96	85.68 ± 3.47
xcomp	55.87	91.62 ± 0.53	90.02 ± 0.77	92.10 ± 0.05	88.76 ± 0.12	79.37 ± 2.04	81.06 ± 2.19
num	82.20	86.64 ± 0.32	86.76 ± 1.63	87.03 ± 1.56	81.27 ± 1.94	81.58 ± 2.72	83.89 ± 2.34
rcmod	36.90	58.67 ± 5.22	51.21 ± 3.72	60.71 ± 2.34	50.45 ± 8.84	50.67 ± 7.03	44.98 ± 2.89
advcl	28.11	55.41 ± 2.88	52.47 ± 5.32	58.50 ± 3.67	44.97 ± 1.37	44.62 ± 5.75	41.66 ± 2.91
neg	77.84	83.86 ± 0.84	84.74 ± 1.39	84.10 ± 2.10	83.56 ± 1.62	86.68 ± 2.21	83.94 ± 0.73
auxpass	89.45	98.86 ± 0.55	98.12 ± 0.53	98.64 ± 0.55	97.73 ± 0.33	97.51 ± 0.60	96.65 ± 0.41
nsubjpass	63.23	78.45 ± 6.51	78.41 ± 3.53	70.97 ± 3.19	71.25 ± 9.08	87.55 ± 1.96	76.60 ± 4.53
possessive	99.13	99.42 ± 0.17	99.23 ± 0.10	99.26 ± 0.06	99.13 ± 0.20	99.23 ± 0.10	99.26 ± 0.06
pcomp	75.40	94.35 ± 0.31	91.57 ± 0.88	92.61 ± 1.47	92.80 ± 1.66	94.24 ± 0.76	87.32 ± 0.64
discourse	30.27	66.35 ± 4.83	63.57 ± 5.54	65.56 ± 2.50	47.46 ± 1.90	65.00 ± 1.36	48.47 ± 1.04
partmod	61.14	62.63 ± 2.79	63.23 ± 1.09	62.30 ± 0.66	63.23 ± 1.33	68.48 ± 2.26	68.01 ± 2.40
appos	43.50	69.58 ± 3.45	58.69 ± 5.44	48.18 ± 1.03	63.11 ± 2.87	62.72 ± 1.10	48.76 ± 1.31
prt	97.63	97.63 ± 0.45	98.27 ± 0.99	96.49 ± 0.86	97.92 ± 0.93	98.41 ± 0.56	97.92 ± 0.51
number	74.51	87.73 ± 1.82	81.84 ± 4.57	79.23 ± 1.98	88.38 ± 2.80	84.90 ± 1.12	78.94 ± 2.29
quantmod	70.63	77.35 ± 2.60	74.03 ± 3.77	72.09 ± 0.64	78.72 ± 3.23	74.76 ± 2.46	72.74 ± 0.37
parataxis	24.60	49.83 ± 3.57	46.30 ± 3.64	47.18 ± 11.62	42.33 ± 2.80	43.21 ± 9.58	37.92 ± 2.22
infmod	58.13	81.24 ± 4.85	76.27 ± 2.33	77.42 ± 2.62	74.40 ± 2.54	74.49 ± 3.52	73.60 ± 3.53
tmod	53.30	81.23 ± 2.56	70.70 ± 1.95	68.96 ± 1.20	69.96 ± 1.11	72.07 ± 2.34	62.00 ± 2.22
expl	83.99	87.91 ± 2.14	89.43 ± 1.97	89.54 ± 4.17	86.27 ± 0.86	87.14 ± 1.68	84.97 ± 1.13
mwe	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
npadvmod	75.69	88.23 ± 1.85	91.90 ± 1.15	93.27 ± 3.47	94.80 ± 3.74	85.47 ± 2.52	85.93 ± 0.27
iobj	75.54	95.11 ± 1.96	92.21 ± 2.57	94.20 ± 0.83	92.03 ± 4.15	92.57 ± 1.66	89.49 ± 6.30
predet	75.16	81.37 ± 2.24	79.71 ± 3.42	84.89 ± 2.35	91.51 ± 6.13	77.44 ± 2.94	75.98 ± 4.04
acomp	82.17	90.45 ± 0.64	89.81 ± 0.64	90.87 ± 1.94	89.81 ± 0.64	90.23 ± 0.97	89.17 ± 0.64
csubj	43.10	60.06 ± 1.80	58.62 ± 6.04	61.78 ± 2.17	58.91 ± 1.99	62.36 ± 2.77	61.49 ± 2.63
preconj	65.22	73.91 ± 0.00	79.71 ± 8.23	79.71 ± 4.52	84.06 ± 4.53	76.81 ± 1.25	77.54 ± 2.51
csubjpass	66.67	100.00 ± 0.00	77.78 ± 19.24	100.00 ± 0.00	66.67 ± 0.00	88.89 ± 19.24	100.00 ± 0.00	
    '''
    plt.axhline(y=0, color='r', linewidth=0.5, linestyle='--')
    head = True
    group = defaultdict(dict)
    names = ['DeBERTa', 'POS', 'NER', 'CON', 'SRL', 'MTL-5']
    nmax = 20
    c = 0
    for line in table.splitlines():
        line = line.strip()
        if not line:
            continue
        cells = line.split('\t')
        if not cells:
            continue
        if head:
            head = False
            continue

        label, scores = cells[0], cells[1:]
        scores = [float(x.split()[0]) for x in scores]
        scores[0], scores[1] = scores[1], scores[0]
        for n, s in zip(names, scores[1:]):
            group[n][label] = s - scores[0]
        # c += 1
        # if c == nmax:
        #     break
    texts = []
    xys = defaultdict(lambda: ([], []))
    for i, (n, scores) in enumerate(group.items()):
        for j, (label, diff) in enumerate(scores.items()):
            # plt.scatter(i + 1, diff)
            xys[label][0].append(i + 1)
            xys[label][1].append(diff)
            # texts.append(plt.text(i + 1, diff, label))
    # colors = prop_cycle.by_key()['color']
    # colors.extend(['r', 'g', 'b', 'c', 'm', 'y'])
    # colors = ['#e6194b', '#3cb44b', '#ffe119', '#4363d8', '#f58231', '#911eb4', '#46f0f0', '#f032e6', '#bcf60c', '#fabebe', '#008080', '#e6beff', '#9a6324', '#fffac8', '#800000', '#aaffc3', '#808000', '#ffd8b1', '#000075', '#808080', '#ffffff', '#000000']
    colors = ['#696969', '#2e8b57', '#800000', '#191970', '#808000', '#ff0000', '#ff8c00', '#ffd700', '#ba55d3',
              '#00fa9a', '#00ffff', '#0000ff', '#adff2f', '#ff00ff', '#1e90ff', '#fa8072', '#eee8aa', '#dda0dd',
              '#ff1493', '#87cefa']
    for i, (label, xy) in enumerate(xys.items()):
        label = label[:4]
        plt.scatter(*xy, label=label if i < nmax else '_nolegend_', color=colors[i % len(colors)], marker='_', s=300/(i+1))
    # adjust_text(texts)
    # plt.axhline(y=0, color='r', linewidth=0.5, linestyle='--')
    plt.legend(bbox_to_anchor=(1, 1.01), loc='upper left', labelspacing=0.2, borderpad=0.1, handletextpad=0.1)
    plt.xticks(list(range(1, 1 + len(group))), list(group.keys()))
    # plt.ylabel('Δacc')
    plt.tight_layout()
    pdf = 'EMNLP-2021-MTL/fig/deberta/dep-acc-diff.pdf'
    os.makedirs(os.path.dirname(pdf), exist_ok=True)
    plt.savefig(pdf)
    plt.show()


if __name__ == '__main__':
    main()
