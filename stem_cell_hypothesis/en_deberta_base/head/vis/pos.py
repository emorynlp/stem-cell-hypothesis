# -*- coding:utf-8 -*-
# Author: hankcs
# Date: 2021-05-11 19:50
import os
from collections import defaultdict

import matplotlib.pyplot as plt
import math

prop_cycle = plt.rcParams['axes.prop_cycle']
plt.rcParams["figure.figsize"] = (4, 3)
plt.rcParams.update({'font.size': 8})


def main():
    table = '''
	static	single	ner	dep	con	srl	all
NN	10.60	18.78 ± 7.36	17.47 ± 3.97	16.24 ± 1.11	17.10 ± 3.09	18.21 ± 1.42	29.59 ± 5.81
IN	31.90	29.70 ± 6.78	32.99 ± 11.20	24.39 ± 0.98	37.17 ± 21.79	25.02 ± 1.81	24.65 ± 2.42
DT	47.70	56.64 ± 11.85	54.44 ± 12.52	48.26 ± 1.04	49.80 ± 1.62	47.30 ± 0.11	46.88 ± 0.46
NNP	51.39	47.57 ± 1.27	42.56 ± 0.64	41.59 ± 1.78	43.41 ± 2.40	43.47 ± 1.58	39.57 ± 2.28
JJ	20.92	17.17 ± 2.70	17.54 ± 4.14	15.62 ± 1.92	17.72 ± 1.77	16.61 ± 0.96	14.74 ± 1.03
.	95.62	97.27 ± 0.16	97.27 ± 0.20	97.39 ± 0.15	96.41 ± 0.73	96.49 ± 0.50	96.30 ± 0.89
NNS	42.38	51.03 ± 1.22	49.59 ± 1.37	50.91 ± 0.31	51.32 ± 0.31	49.96 ± 0.87	50.23 ± 0.93
PRP	39.54	37.61 ± 4.43	39.85 ± 10.90	33.43 ± 2.95	40.46 ± 13.41	29.47 ± 2.00	30.32 ± 1.60
RB	14.19	16.88 ± 0.70	16.75 ± 0.30	17.10 ± 0.56	17.20 ± 0.71	17.46 ± 0.45	16.06 ± 0.66
,	70.73	91.62 ± 2.20	77.07 ± 9.62	72.25 ± 2.75	71.08 ± 0.64	70.75 ± 0.01	70.59 ± 0.12
VB	67.73	70.37 ± 2.54	72.89 ± 0.88	69.99 ± 1.63	72.13 ± 2.21	71.44 ± 1.66	70.95 ± 2.31
VBD	18.16	28.54 ± 5.27	27.16 ± 10.07	21.52 ± 3.27	24.98 ± 10.75	29.12 ± 13.62	22.36 ± 1.08
CC	36.83	63.67 ± 2.28	48.86 ± 14.46	52.39 ± 10.96	40.75 ± 4.16	49.76 ± 14.55	43.24 ± 16.90
VBZ	30.54	36.66 ± 6.61	36.06 ± 4.40	30.35 ± 2.43	29.92 ± 0.42	30.73 ± 2.16	30.85 ± 1.03
VBP	53.64	52.95 ± 0.97	53.66 ± 2.89	53.15 ± 1.13	52.67 ± 0.76	54.10 ± 0.10	52.08 ± 1.64
VBN	39.59	44.89 ± 2.06	42.03 ± 2.34	44.57 ± 1.21	44.18 ± 1.58	42.21 ± 0.49	42.20 ± 0.11
CD	40.85	40.89 ± 2.07	43.82 ± 6.47	40.21 ± 0.56	39.46 ± 1.72	40.47 ± 1.94	39.05 ± 0.09
VBG	48.18	50.51 ± 3.74	53.56 ± 3.86	50.61 ± 3.57	48.25 ± 1.44	55.18 ± 0.43	54.91 ± 0.36
TO	67.62	81.98 ± 2.25	72.84 ± 3.35	78.60 ± 0.52	79.58 ± 2.33	75.61 ± 6.99	64.10 ± 3.80
MD	47.28	51.13 ± 13.81	45.56 ± 1.90	43.95 ± 2.65	46.96 ± 3.29	42.35 ± 0.25	46.98 ± 2.73
PRP$	36.02	38.05 ± 2.58	36.12 ± 4.52	40.12 ± 8.67	47.25 ± 16.48	34.93 ± 2.41	33.92 ± 2.35
UH	59.66	60.14 ± 4.16	64.00 ± 9.17	59.71 ± 1.93	65.88 ± 4.20	62.15 ± 7.56	69.61 ± 5.71
HYPH	57.71	67.01 ± 15.32	67.22 ± 18.06	67.44 ± 9.99	67.04 ± 4.86	67.23 ± 4.77	51.92 ± 8.90
POS	64.56	62.04 ± 1.00	62.96 ± 0.92	66.92 ± 0.73	65.36 ± 3.01	61.62 ± 2.57	62.13 ± 3.75
'	78.47	78.26 ± 0.94	78.57 ± 1.15	77.55 ± 1.44	77.86 ± 0.37	77.31 ± 0.31	77.79 ± 1.54
``	76.55	76.09 ± 2.85	77.66 ± 1.71	77.94 ± 0.65	78.58 ± 2.60	77.59 ± 1.12	76.41 ± 2.14
WDT	56.53	50.22 ± 2.39	53.97 ± 3.85	41.92 ± 5.20	51.40 ± 6.48	51.69 ± 7.71	39.85 ± 8.81
WP	52.87	68.37 ± 6.88	51.04 ± 19.35	35.50 ± 1.69	42.06 ± 4.57	41.14 ± 3.27	38.36 ± 3.82
WRB	32.12	37.90 ± 6.61	34.12 ± 1.30	46.37 ± 16.84	38.55 ± 6.57	57.45 ± 16.63	41.53 ± 3.22
RP	60.28	71.87 ± 1.56	71.63 ± 1.95	72.67 ± 1.79	70.78 ± 1.13	71.82 ± 0.16	72.86 ± 1.46
:	41.95	42.13 ± 3.56	44.63 ± 19.39	33.21 ± 12.66	54.81 ± 12.30	38.83 ± 6.42	28.09 ± 8.44
JJR	41.45	50.86 ± 13.88	44.94 ± 3.03	42.10 ± 3.16	43.66 ± 2.28	40.74 ± 0.33	48.15 ± 9.05
NNPS	44.44	49.53 ± 1.82	44.81 ± 3.74	50.98 ± 4.15	46.12 ± 1.10	47.86 ± 3.32	43.21 ± 1.27
EX	85.67	86.32 ± 1.17	86.54 ± 0.75	87.84 ± 1.67	86.10 ± 0.82	85.78 ± 0.18	87.41 ± 1.47
JJS	44.54	49.05 ± 3.50	42.50 ± 2.20	42.36 ± 1.15	49.20 ± 5.82	47.16 ± 6.44	43.23 ± 1.15
RBR	42.15	36.77 ± 3.39	35.28 ± 2.70	38.12 ± 6.47	41.26 ± 0.90	41.11 ± 6.79	36.62 ± 8.58
-LRB-	91.88	93.06 ± 0.77	93.06 ± 3.06	94.75 ± 0.77	94.41 ± 1.34	93.07 ± 1.17	93.74 ± 1.27
-RRB-	97.96	96.94 ± 0.00	97.96 ± 0.00	96.94 ± 0.51	97.45 ± 0.88	96.60 ± 1.06	96.43 ± 1.35
$	97.69	96.14 ± 2.91	92.87 ± 3.85	94.03 ± 3.49	94.80 ± 4.17	94.03 ± 0.33	92.10 ± 3.85
PDT	79.52	84.34 ± 1.81	84.94 ± 4.93	82.33 ± 1.93	88.96 ± 0.92	87.15 ± 4.56	86.34 ± 1.93
RBS	64.29	60.42 ± 6.46	64.29 ± 5.43	64.29 ± 13.21	57.14 ± 3.22	65.77 ± 9.80	58.04 ± 0.90
FW	64.95	65.64 ± 1.57	65.29 ± 3.91	67.01 ± 4.72	62.89 ± 1.03	63.92 ± 1.78	65.98 ± 3.71
NFP	43.33	42.22 ± 9.18	46.11 ± 8.22	43.33 ± 10.14	51.67 ± 12.02	53.33 ± 13.64	48.33 ± 13.64
WP$	81.58	81.58 ± 4.56	79.82 ± 5.48	85.09 ± 6.08	78.95 ± 5.27	83.34 ± 12.15	78.07 ± 1.52
XX	78.12	83.34 ± 1.81	81.25 ± 3.13	81.25 ± 5.42	82.29 ± 1.81	81.25 ± 0.00	83.33 ± 3.61
SYM	70.00	68.89 ± 3.85	70.00 ± 5.77	68.89 ± 1.92	68.89 ± 1.92	67.78 ± 1.92	68.89 ± 5.09
ADD	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
LS	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
AFX	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	
    '''
    plt.axhline(y=0, color='r', linewidth=0.5, linestyle='--')
    head = True
    group = defaultdict(dict)
    names = ['DeBERTa', 'NER', 'DEP', 'CON', 'SRL', 'MTL-5']
    headers = ['DeBERTa', 'STL'] + names[1:]
    ss = defaultdict(dict)
    raw = defaultdict(dict)
    nmax = 20
    for line in table.splitlines():
        line = line.strip()
        if not line:
            continue
        cells = line.split('\t')
        if not cells:
            continue
        if head:
            head = False
            continue

        label, scores = cells[0], cells[1:]
        for n, s in zip(headers, scores):
            raw[n][label] = s
        scores = [float(x.split()[0]) for x in scores]
        for n, s in zip(headers, scores):
            ss[n][label] = s
        scores[0], scores[1] = scores[1], scores[0]
        for n, s in zip(names, scores[1:]):
            group[n][label] = s - scores[0]
        # nmax -= 1
        # if not nmax:
        #     break
    texts = []
    xys = defaultdict(lambda: ([], []))
    ng = set()
    for i, (n, scores) in enumerate(group.items()):
        for j, (label, diff) in enumerate(scores.items()):
            # plt.scatter(i + 1, diff)
            xys[label][0].append(i + 1)
            xys[label][1].append(diff)
            if diff > 0 and len(ng) <= 20:
                ng.add(label)
            # texts.append(plt.text(i + 1, diff, label))
    # colors = prop_cycle.by_key()['color']
    # colors.extend(['r', 'g', 'b', 'c', 'm', 'y'])
    # colors = ['#e6194b', '#3cb44b', '#ffe119', '#4363d8', '#f58231', '#911eb4', '#46f0f0', '#f032e6', '#bcf60c', '#fabebe', '#008080', '#e6beff', '#9a6324', '#fffac8', '#800000', '#aaffc3', '#808000', '#ffd8b1', '#000075', '#808080', '#ffffff', '#000000']
    colors = ['#696969', '#2e8b57', '#800000', '#191970', '#808000', '#ff0000', '#ff8c00', '#ffd700', '#ba55d3',
              '#00fa9a', '#00ffff', '#0000ff', '#adff2f', '#ff00ff', '#1e90ff', '#fa8072', '#eee8aa', '#dda0dd',
              '#ff1493', '#87cefa'] + ['#e6194b', '#3cb44b', '#ffe119', '#4363d8', '#f58231', '#911eb4', '#46f0f0',
                                       '#f032e6', '#bcf60c', '#fabebe', '#008080', '#e6beff', '#9a6324', '#fffac8',
                                       '#800000', '#aaffc3', '#808000', '#ffd8b1', '#000075', '#808080', '#000000']
    print('\t'.join([''] + headers))
    headers[0] = 'STL'
    headers[1] = 'DeBERTa'
    for label in xys.keys():
        cs = ['\\texttt{' + label.replace('$', '\\$') + '}']
        win = max([(g, d[label]) for g,d in ss.items()], key=lambda x:x[-1])[1]
        for g in headers:
            data = ss[g]
            cell = f'{data[label]:.2f}'
            if win == data[label]:
                cell = '\\textbf{' + cell + '}'
            # cell = raw[g][label].replace(' ± ', '$\pm$')
            diff = group[g].get(label, None)
            if diff is not None:
                if diff > 0:
                    cell += '\\posdiff{' + f'{diff:.2f}' + '}'
                else:
                    cell += '\\negdiff{' + f'{diff:.2f}' + '}'
            cs.append(cell)
        print(' & '.join(cs) + ' \\\\ ')
    # exit(0)

    nmax = 20
    for label in xys.keys():
        if len(ng) >= nmax:
            break
        ng.add(label)
    for i, (label, xy) in enumerate(xys.items()):
        plt.scatter(*xy, label=label if label in ng else '_nolegend_', color=colors[i % len(colors)], marker='_',
                    s=300 / (i + 1))
    # adjust_text(texts)
    plt.legend(bbox_to_anchor=(1, 1.01), loc='upper left', labelspacing=0.2, borderpad=0.1, handletextpad=0.1)
    plt.xticks(list(range(1, 1 + len(group))), list(group.keys()))
    # plt.ylabel('Δacc')
    plt.tight_layout()
    pdf = 'EMNLP-2021-MTL/fig/deberta/pos-acc-diff.pdf'
    os.makedirs(os.path.dirname(pdf), exist_ok=True)
    plt.savefig(pdf)
    plt.show()


if __name__ == '__main__':
    main()
