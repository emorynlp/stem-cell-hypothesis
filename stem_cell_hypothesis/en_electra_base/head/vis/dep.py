# -*- coding:utf-8 -*-
# Author: hankcs
# Date: 2021-05-11 19:50
import os
from collections import defaultdict

import matplotlib.pyplot as plt

prop_cycle = plt.rcParams['axes.prop_cycle']
plt.rcParams["figure.figsize"] = (4, 3)
plt.rcParams.update({'font.size': 8})

def main():
    table = '''
	static	single	pos	ner	con	srl	joint
prep	67.64	69.51 ± 1.26	67.03 ± 0.68	67.32 ± 0.96	66.99 ± 0.57	70.89 ± 3.25	67.28 ± 0.55
pobj	77.51	94.93 ± 0.61	90.00 ± 1.34	86.62 ± 2.00	93.64 ± 0.33	88.97 ± 2.68	73.65 ± 1.87
nsubj	53.27	65.85 ± 1.36	56.20 ± 1.84	58.90 ± 1.56	53.53 ± 0.69	63.55 ± 1.42	50.10 ± 0.88
det	85.55	94.01 ± 0.51	88.54 ± 1.90	88.43 ± 1.28	96.56 ± 0.17	95.20 ± 0.49	84.25 ± 3.30
root	99.98	99.98 ± 0.03	99.90 ± 0.10	99.94 ± 0.08	100.00 ± 0.01	99.83 ± 0.10	99.86 ± 0.01
nn	78.22	86.11 ± 0.47	81.34 ± 0.55	81.89 ± 1.45	85.40 ± 0.86	87.32 ± 1.55	80.45 ± 1.52
amod	86.65	91.94 ± 0.74	88.93 ± 0.96	88.38 ± 1.18	90.46 ± 1.08	91.78 ± 0.66	83.41 ± 2.38
dobj	69.25	89.98 ± 1.05	86.25 ± 1.42	85.31 ± 0.95	86.23 ± 0.93	75.55 ± 2.70	73.52 ± 1.70
advmod	60.27	68.56 ± 0.58	64.97 ± 1.10	67.77 ± 2.90	64.02 ± 1.11	67.96 ± 2.69	60.23 ± 1.39
aux	78.59	87.23 ± 1.61	84.24 ± 0.25	86.41 ± 2.34	84.60 ± 0.61	83.40 ± 1.91	80.74 ± 0.49
cc	39.08	42.05 ± 1.63	46.61 ± 2.50	41.42 ± 1.57	45.63 ± 2.81	43.61 ± 4.25	39.38 ± 0.58
conj	48.33	64.68 ± 0.40	59.95 ± 0.84	60.16 ± 1.49	60.27 ± 0.62	59.67 ± 0.85	53.28 ± 0.47
dep	30.08	31.20 ± 0.77	30.96 ± 1.17	30.85 ± 0.47	29.26 ± 0.34	30.85 ± 1.36	29.17 ± 0.18
poss	67.89	77.14 ± 1.41	65.04 ± 2.41	68.64 ± 2.17	75.57 ± 2.06	76.64 ± 2.69	63.11 ± 2.57
ccomp	29.90	42.81 ± 2.20	39.74 ± 4.66	44.02 ± 3.32	37.09 ± 1.56	41.40 ± 3.13	37.07 ± 2.70
cop	72.28	87.73 ± 1.90	87.18 ± 3.72	88.51 ± 1.14	83.99 ± 1.02	82.81 ± 1.93	73.26 ± 2.59
mark	47.54	86.78 ± 0.55	81.66 ± 2.58	86.07 ± 0.80	85.67 ± 2.01	81.23 ± 0.75	74.18 ± 1.31
xcomp	51.71	66.56 ± 0.69	60.70 ± 1.88	59.63 ± 1.52	63.50 ± 2.40	57.97 ± 1.75	58.23 ± 0.53
num	81.80	88.21 ± 0.53	83.35 ± 1.03	87.61 ± 0.53	85.17 ± 1.60	87.40 ± 2.14	82.75 ± 1.08
rcmod	30.24	36.92 ± 2.31	34.77 ± 2.00	33.80 ± 1.12	36.40 ± 3.10	45.90 ± 3.22	36.33 ± 2.15
advcl	17.81	16.42 ± 1.42	16.28 ± 0.18	18.60 ± 0.46	17.25 ± 0.79	16.70 ± 0.96	16.91 ± 1.16
neg	70.27	81.20 ± 1.74	72.76 ± 2.21	81.30 ± 5.54	82.17 ± 0.72	79.80 ± 1.88	77.04 ± 3.15
auxpass	95.85	98.34 ± 0.08	97.65 ± 0.13	97.87 ± 0.43	97.87 ± 0.21	96.71 ± 0.53	94.93 ± 0.72
nsubjpass	61.51	62.59 ± 1.64	47.28 ± 1.68	48.55 ± 5.03	53.14 ± 3.64	62.05 ± 2.08	47.05 ± 1.22
possessive	99.04	98.68 ± 0.34	98.46 ± 0.19	99.01 ± 0.20	98.94 ± 0.16	99.13 ± 0.72	99.10 ± 0.05
pcomp	75.70	84.04 ± 1.12	80.96 ± 0.41	81.03 ± 0.61	82.66 ± 1.19	78.85 ± 0.12	75.70 ± 0.00
discourse	27.35	36.71 ± 3.10	38.06 ± 4.01	37.51 ± 6.79	33.20 ± 0.75	46.24 ± 0.56	37.44 ± 2.20
partmod	54.18	57.47 ± 0.57	54.37 ± 0.08	55.90 ± 1.40	57.43 ± 0.29	59.75 ± 2.30	59.19 ± 0.50
appos	27.88	39.17 ± 2.65	32.90 ± 1.06	34.99 ± 4.13	36.11 ± 3.78	36.40 ± 2.56	33.58 ± 1.03
prt	96.74	94.36 ± 0.39	93.47 ± 0.93	94.21 ± 0.51	93.67 ± 0.48	93.47 ± 1.16	92.48 ± 1.56
number	78.87	79.81 ± 0.70	78.28 ± 0.98	77.56 ± 0.22	79.16 ± 0.33	76.54 ± 1.12	76.91 ± 0.66
quantmod	70.87	83.17 ± 1.34	73.38 ± 3.73	71.28 ± 0.37	80.66 ± 2.48	80.18 ± 2.09	72.01 ± 0.14
parataxis	17.72	18.52 ± 0.53	16.40 ± 0.46	19.49 ± 0.81	17.90 ± 1.80	24.16 ± 5.36	18.52 ± 2.07
infmod	62.40	65.51 ± 1.31	67.91 ± 1.47	66.13 ± 0.71	67.11 ± 0.31	69.51 ± 1.74	64.71 ± 1.37
tmod	43.68	60.35 ± 0.16	60.81 ± 4.65	57.42 ± 2.18	63.46 ± 1.72	62.91 ± 1.38	56.04 ± 0.73
expl	83.66	83.99 ± 0.33	83.23 ± 0.38	83.22 ± 0.18	83.34 ± 0.57	83.66 ± 0.33	83.55 ± 0.19
mwe	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
npadvmod	75.69	79.36 ± 0.80	79.36 ± 0.46	78.14 ± 1.61	80.58 ± 0.26	80.73 ± 0.46	77.37 ± 1.15
iobj	86.41	86.05 ± 1.37	84.60 ± 1.91	82.24 ± 1.57	84.42 ± 3.62	82.79 ± 1.37	76.81 ± 1.13
predet	66.46	67.29 ± 2.00	69.98 ± 5.57	77.22 ± 7.28	66.67 ± 1.56	73.70 ± 4.41	69.98 ± 2.35
acomp	85.35	86.83 ± 2.24	88.75 ± 1.47	87.69 ± 1.60	87.68 ± 1.33	82.59 ± 0.97	83.44 ± 1.27
csubj	28.45	38.22 ± 2.64	38.79 ± 3.76	40.81 ± 4.07	35.34 ± 4.32	37.36 ± 6.70	35.06 ± 4.34
preconj	58.70	77.53 ± 3.32	74.64 ± 6.64	78.99 ± 8.78	78.99 ± 3.32	84.78 ± 4.35	85.51 ± 6.64
csubjpass	33.33	44.44 ± 19.25	55.56 ± 19.25	55.56 ± 19.25	55.56 ± 19.25	44.44 ± 19.25	66.67 ± 0.00	
    '''
    plt.axhline(y=0, color='r', linewidth=0.5, linestyle='--')
    head = True
    group = defaultdict(dict)
    names = ['ELECTRA', 'POS', 'NER', 'CON', 'SRL', 'MTL-5']
    nmax = 20
    c = 0
    for line in table.splitlines():
        line = line.strip()
        if not line:
            continue
        cells = line.split('\t')
        if not cells:
            continue
        if head:
            head = False
            continue

        label, scores = cells[0], cells[1:]
        scores = [float(x.split()[0]) for x in scores]
        scores[0], scores[1] = scores[1], scores[0]
        for n, s in zip(names, scores[1:]):
            group[n][label] = s - scores[0]
        # c += 1
        # if c == nmax:
        #     break
    texts = []
    xys = defaultdict(lambda: ([], []))
    for i, (n, scores) in enumerate(group.items()):
        for j, (label, diff) in enumerate(scores.items()):
            # plt.scatter(i + 1, diff)
            xys[label][0].append(i + 1)
            xys[label][1].append(diff)
            # texts.append(plt.text(i + 1, diff, label))
    # colors = prop_cycle.by_key()['color']
    # colors.extend(['r', 'g', 'b', 'c', 'm', 'y'])
    # colors = ['#e6194b', '#3cb44b', '#ffe119', '#4363d8', '#f58231', '#911eb4', '#46f0f0', '#f032e6', '#bcf60c', '#fabebe', '#008080', '#e6beff', '#9a6324', '#fffac8', '#800000', '#aaffc3', '#808000', '#ffd8b1', '#000075', '#808080', '#ffffff', '#000000']
    colors = ['#696969', '#2e8b57', '#800000', '#191970', '#808000', '#ff0000', '#ff8c00', '#ffd700', '#ba55d3',
              '#00fa9a', '#00ffff', '#0000ff', '#adff2f', '#ff00ff', '#1e90ff', '#fa8072', '#eee8aa', '#dda0dd',
              '#ff1493', '#87cefa']
    for i, (label, xy) in enumerate(xys.items()):
        label = label[:4]
        plt.scatter(*xy, label=label if i < nmax else '_nolegend_', color=colors[i % len(colors)], marker='_', s=300/(i+1))
    # adjust_text(texts)
    # plt.axhline(y=0, color='r', linewidth=0.5, linestyle='--')
    plt.legend(bbox_to_anchor=(1, 1.01), loc='upper left', labelspacing=0.2, borderpad=0.1, handletextpad=0.1)
    plt.xticks(list(range(1, 1 + len(group))), list(group.keys()))
    # plt.ylabel('Δacc')
    plt.tight_layout()
    pdf = 'EMNLP-2021-MTL/fig/electra/dep-acc-diff.pdf'
    os.makedirs(os.path.dirname(pdf), exist_ok=True)
    plt.savefig(pdf)
    plt.show()


if __name__ == '__main__':
    main()
