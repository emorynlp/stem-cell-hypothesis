# -*- coding:utf-8 -*-
# Author: hankcs
# Date: 2021-05-11 19:50
import os
from collections import defaultdict

import matplotlib.pyplot as plt

prop_cycle = plt.rcParams['axes.prop_cycle']
plt.rcParams["figure.figsize"] = (4, 3)
plt.rcParams.update({'font.size': 8})

def main():
    table = '''
	static	single	pos	ner	dep	con	joint
ARG1	79.86	83.42 ± 0.52	82.58 ± 0.60	82.40 ± 0.42	82.38 ± 0.61	82.35 ± 0.90	80.96 ± 0.43
ARG0	83.62	82.54 ± 1.34	77.57 ± 1.05	78.46 ± 0.16	80.18 ± 0.98	80.79 ± 1.03	76.53 ± 2.01
ARG2	78.97	87.91 ± 0.79	85.01 ± 1.70	86.42 ± 0.43	85.12 ± 0.97	87.16 ± 1.21	84.30 ± 1.70
ARGM-TMP	66.43	70.04 ± 0.89	67.83 ± 2.67	66.81 ± 2.18	65.89 ± 1.50	64.99 ± 2.50	64.58 ± 1.26
ARGM-DIS	53.21	57.68 ± 6.55	50.72 ± 4.17	57.55 ± 5.80	65.82 ± 2.23	52.73 ± 3.04	49.66 ± 3.58
ARGM-ADV	41.46	53.67 ± 2.96	49.03 ± 4.43	54.80 ± 1.66	57.11 ± 2.07	55.09 ± 1.18	55.47 ± 2.27
ARGM-MOD	74.32	82.42 ± 1.44	78.69 ± 2.18	80.37 ± 1.49	80.60 ± 0.45	78.06 ± 0.75	78.62 ± 1.20
ARGM-LOC	70.40	77.74 ± 0.26	75.21 ± 0.29	75.62 ± 1.35	74.80 ± 0.07	74.15 ± 1.61	72.32 ± 1.78
ARGM-MNR	75.31	81.23 ± 1.87	79.13 ± 0.36	81.40 ± 1.29	81.40 ± 1.30	78.45 ± 0.41	80.52 ± 0.81
ARGM-NEG	78.57	82.13 ± 2.09	79.59 ± 1.35	79.87 ± 1.16	85.47 ± 2.26	80.38 ± 0.78	79.54 ± 0.73
R-ARG1	55.54	71.93 ± 1.57	67.32 ± 2.53	74.38 ± 0.57	75.46 ± 0.57	71.93 ± 1.94	73.78 ± 1.27
R-ARG0	70.70	76.72 ± 3.28	72.91 ± 3.26	76.32 ± 1.23	79.56 ± 0.74	76.77 ± 1.02	78.54 ± 1.80
C-ARG1	39.55	46.65 ± 1.42	52.07 ± 6.40	48.55 ± 0.77	50.78 ± 3.64	46.79 ± 1.35	44.22 ± 1.26
ARGM-PRP	70.24	77.94 ± 0.55	72.78 ± 2.48	77.94 ± 2.84	80.56 ± 3.37	77.86 ± 0.00	74.84 ± 0.60
ARGM-DIR	88.57	92.06 ± 0.36	91.11 ± 1.79	91.98 ± 0.60	91.82 ± 0.36	91.19 ± 0.63	91.66 ± 1.95
ARG3	83.42	90.55 ± 1.35	86.72 ± 0.41	88.32 ± 0.82	90.11 ± 1.07	88.24 ± 1.22	85.74 ± 2.18
ARG4	88.74	93.04 ± 1.27	91.94 ± 1.30	93.23 ± 0.32	92.13 ± 0.64	91.12 ± 0.69	91.76 ± 1.10
ARGM-CAU	61.02	71.38 ± 0.16	67.61 ± 4.96	73.73 ± 1.50	82.58 ± 2.37	77.78 ± 0.59	76.18 ± 2.86
ARGM-PRD	54.09	61.48 ± 2.37	55.12 ± 4.43	59.79 ± 2.00	62.26 ± 1.35	61.61 ± 2.35	58.75 ± 2.55
ARGM-ADJ	76.00	87.33 ± 0.23	83.33 ± 4.97	85.20 ± 0.40	86.13 ± 0.23	86.53 ± 0.23	83.73 ± 2.44
ARGM-EXT	87.58	90.20 ± 1.13	88.45 ± 1.36	87.80 ± 1.00	87.15 ± 1.00	87.15 ± 0.38	86.06 ± 1.00
ARGM-PNC	69.74	80.26 ± 0.00	79.39 ± 2.74	81.14 ± 0.76	78.95 ± 4.56	82.89 ± 2.64	79.39 ± 2.01
ARGM-GOL	87.67	86.76 ± 3.16	83.56 ± 3.62	85.39 ± 0.79	85.39 ± 2.85	83.10 ± 3.16	81.28 ± 1.58
ARGM-LVB	98.59	96.24 ± 1.62	97.65 ± 0.81	97.18 ± 0.00	95.77 ± 2.44	97.18 ± 1.41	96.71 ± 0.81
R-ARGM-LOC	81.54	85.13 ± 5.82	76.41 ± 2.35	88.72 ± 10.92	76.92 ± 2.66	75.38 ± 4.62	74.87 ± 4.70
R-ARGM-TMP	66.67	72.49 ± 4.00	75.13 ± 6.61	77.78 ± 4.20	80.96 ± 2.75	67.20 ± 2.42	81.48 ± 0.92
R-ARG2	67.74	79.03 ± 1.62	70.97 ± 5.82	80.11 ± 3.36	76.88 ± 5.18	77.42 ± 4.27	70.97 ± 6.45
C-ARG2	32.65	45.58 ± 4.71	41.50 ± 3.12	44.90 ± 5.40	42.18 ± 2.36	42.86 ± 3.53	40.82 ± 0.00
C-ARG0	44.12	60.78 ± 10.33	55.88 ± 5.09	56.86 ± 1.70	59.80 ± 6.12	55.88 ± 2.94	56.86 ± 6.12
ARGM-REC	76.47	83.33 ± 1.70	84.31 ± 6.13	88.24 ± 2.95	82.35 ± 0.00	86.27 ± 1.70	85.29 ± 2.95
ARGM-COM	88.89	88.89 ± 0.00	88.89 ± 3.70	92.59 ± 0.00	93.83 ± 5.66	91.36 ± 2.14	92.59 ± 0.00
C-ARGM-ADV	45.45	51.52 ± 5.25	51.52 ± 5.25	51.52 ± 5.25	54.55 ± 9.10	51.52 ± 5.25	54.55 ± 0.00
R-ARGM-MNR	54.55	63.64 ± 0.00	63.64 ± 9.09	60.61 ± 5.25	75.76 ± 5.25	63.64 ± 0.00	75.76 ± 5.25
ARG5	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
C-ARGM-TMP	42.86	57.14 ± 0.00	42.86 ± 0.00	52.38 ± 8.24	52.38 ± 8.24	61.90 ± 8.25	61.91 ± 16.49
R-ARGM-CAU	75.00	91.67 ± 14.43	58.33 ± 14.43	83.33 ± 14.43	100.00 ± 0.00	83.33 ± 14.43	91.67 ± 14.43
C-ARGM-CAU	66.67	66.67 ± 0.00	66.67 ± 0.00	66.67 ± 0.00	88.89 ± 19.24	77.78 ± 19.24	66.67 ± 0.00
C-ARG3	66.67	88.89 ± 19.24	88.89 ± 19.24	77.78 ± 19.24	100.00 ± 0.00	100.00 ± 0.00	77.78 ± 19.24
R-ARG4	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
C-ARGM-EXT	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
R-ARGM-ADV	50.00	50.00 ± 0.00	83.33 ± 28.87	66.67 ± 28.87	83.33 ± 28.87	83.33 ± 28.87	50.00 ± 0.00
C-ARGM-LOC	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
C-ARGM-MNR	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
C-ARGM-MOD	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
R-ARGM-PRP	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	83.33 ± 28.87	100.00 ± 0.00
ARGM-PRX	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
ARGA	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
R-ARGM-DIR	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
R-ARGM-PRD	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
C-ARGM-PRD	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
R-ARGM-EXT	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
C-ARGM-PRP	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
R-ARG3	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
ARGM-PRR	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
ARGM-DSP	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	
    '''
    plt.axhline(y=0, color='r', linewidth=0.5, linestyle='--')
    head = True
    group = defaultdict(dict)
    names = ['ELECTRA', 'POS', 'NER', 'DEP', 'CON', 'MTL-5']
    nmax = 20
    c = 0
    for line in table.splitlines():
        line = line.strip()
        if not line:
            continue
        cells = line.split('\t')
        if not cells:
            continue
        if head:
            head = False
            continue

        label, scores = cells[0], cells[1:]
        scores = [float(x.split()[0]) for x in scores]
        scores[0], scores[1] = scores[1], scores[0]
        for n, s in zip(names, scores[1:]):
            group[n][label] = s - scores[0]
        # c += 1
        # if c == nmax:
        #     break
    texts = []
    xys = defaultdict(lambda: ([], []))
    for i, (n, scores) in enumerate(group.items()):
        for j, (label, diff) in enumerate(scores.items()):
            # plt.scatter(i + 1, diff)
            # xys[label][0].append(i + 1)
            # xys[label][1].append(diff-0.025)
            xys[label][0].append(i + 1)
            xys[label][1].append(diff)
            # xys[label][0].append(i + 1)
            # xys[label][1].append(diff+0.025)
            # texts.append(plt.text(i + 1, diff, label))
    # colors = prop_cycle.by_key()['color']
    # colors.extend(['r', 'g', 'b', 'c', 'm', 'y'])
    # colors = ['#e6194b', '#3cb44b', '#ffe119', '#4363d8', '#f58231', '#911eb4', '#46f0f0', '#f032e6', '#bcf60c', '#fabebe', '#008080', '#e6beff', '#9a6324', '#fffac8', '#800000', '#aaffc3', '#808000', '#ffd8b1', '#000075', '#808080', '#ffffff', '#000000']
    colors = ['#696969', '#2e8b57', '#800000', '#191970', '#808000', '#ff0000', '#ff8c00', '#ffd700', '#ba55d3',
              '#00fa9a', '#00ffff', '#0000ff', '#adff2f', '#ff00ff', '#1e90ff', '#fa8072', '#eee8aa', '#dda0dd',
              '#ff1493', '#87cefa']
    for i, (label, xy) in enumerate(xys.items()):
        # label = {
        #     'ARG0': 'A0',
        #     'ARG1': 'A1',
        #     'ARG2': 'A2',
        #     'ARG3': 'A3',
        #     'ARG4': 'A4',
        # }.get(label, label)
        label = label.replace('ARGM-', 'M-')
        label = label.replace('-ARG', '-A')
        plt.scatter(*xy, label=label if i < nmax else '_nolegend_', color=colors[i % len(colors)], marker='_', s=300/(i+1))
    # adjust_text(texts)
    # plt.axhline(y=0, color='r', linewidth=0.5, linestyle='--')
    plt.legend(bbox_to_anchor=(1, 1.01), loc='upper left', labelspacing=0.2, borderpad=0.1, handletextpad=0.1)
    plt.xticks(list(range(1, 1 + len(group))), list(group.keys()))
    # plt.ylabel('Δacc')
    plt.tight_layout()
    pdf = 'EMNLP-2021-MTL/fig/electra/srl-acc-diff.pdf'
    os.makedirs(os.path.dirname(pdf), exist_ok=True)
    plt.savefig(pdf)
    plt.show()


if __name__ == '__main__':
    main()
