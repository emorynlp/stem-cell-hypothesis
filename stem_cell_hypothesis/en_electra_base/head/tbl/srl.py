# -*- coding:utf-8 -*-
# Author: hankcs
# Date: 2021-05-11 19:50
from collections import defaultdict

import matplotlib.pyplot as plt

prop_cycle = plt.rcParams['axes.prop_cycle']
colors = prop_cycle.by_key()['color']
plt.rcParams["figure.figsize"] = (4, 3)
plt.rcParams.update({'font.size': 8})


def main():
    table = '''
	static	single	pos	ner	dep	con	joint
ARG1	71.88	77.75 ± 1.16	78.78 ± 0.35	77.86 ± 0.60	77.08 ± 0.88	79.58 ± 1.30	74.58 ± 0.60
ARG0	74.46	73.24 ± 4.59	75.95 ± 3.69	71.61 ± 1.87	71.17 ± 0.34	74.16 ± 1.00	70.13 ± 1.60
ARG2	80.43	89.69 ± 1.00	89.81 ± 0.29	89.65 ± 0.67	90.15 ± 1.15	89.86 ± 0.22	87.36 ± 0.08
ARGM-TMP	60.55	73.24 ± 4.89	74.48 ± 0.91	70.57 ± 9.00	76.58 ± 3.37	75.59 ± 2.33	68.55 ± 1.76
ARGM-DIS	50.18	70.40 ± 5.73	69.56 ± 5.93	75.67 ± 6.02	69.58 ± 1.42	77.51 ± 0.51	60.41 ± 2.70
ARGM-ADV	40.28	59.01 ± 5.17	61.31 ± 1.72	64.83 ± 6.64	56.48 ± 3.61	63.88 ± 3.07	54.36 ± 0.92
ARGM-MOD	80.46	82.53 ± 5.51	81.77 ± 4.07	84.41 ± 1.59	82.29 ± 1.12	81.59 ± 0.27	78.54 ± 1.37
ARGM-LOC	58.99	79.45 ± 1.50	78.24 ± 1.19	80.68 ± 5.34	72.88 ± 1.79	79.35 ± 0.58	74.22 ± 0.97
ARGM-MNR	69.91	80.67 ± 3.88	79.33 ± 1.40	80.52 ± 5.32	80.20 ± 0.44	80.89 ± 2.97	77.23 ± 0.22
ARGM-NEG	79.39	86.47 ± 2.31	85.51 ± 3.10	90.54 ± 0.87	90.81 ± 0.75	84.75 ± 0.50	88.40 ± 0.46
R-ARG1	67.43	69.92 ± 2.58	64.77 ± 0.68	71.28 ± 0.90	74.75 ± 1.85	72.09 ± 3.48	75.41 ± 2.89
R-ARG0	75.64	81.20 ± 0.60	76.89 ± 1.70	81.71 ± 0.26	83.36 ± 0.94	80.30 ± 1.02	78.36 ± 1.23
C-ARG1	47.46	51.72 ± 1.42	51.25 ± 4.87	46.86 ± 1.33	45.51 ± 0.12	45.84 ± 2.75	46.11 ± 3.49
ARGM-PRP	69.05	80.48 ± 1.04	78.81 ± 2.65	82.06 ± 2.40	77.38 ± 0.86	83.49 ± 0.99	80.16 ± 0.96
ARGM-DIR	89.29	93.89 ± 0.69	93.73 ± 0.50	95.16 ± 1.39	92.86 ± 1.03	94.92 ± 0.72	94.76 ± 0.63
ARG3	82.89	91.00 ± 1.08	91.98 ± 1.17	90.91 ± 4.05	87.34 ± 0.86	90.91 ± 0.54	89.04 ± 1.23
ARG4	93.96	94.78 ± 0.72	95.51 ± 0.16	95.05 ± 0.28	94.32 ± 0.57	94.32 ± 0.69	93.96 ± 0.28
ARGM-CAU	55.37	62.34 ± 0.87	63.37 ± 1.65	66.76 ± 0.91	68.74 ± 1.18	67.98 ± 1.84	65.73 ± 4.77
ARGM-PRD	52.14	57.72 ± 1.36	61.87 ± 8.20	59.66 ± 3.15	61.35 ± 4.12	59.40 ± 0.60	57.85 ± 0.98
ARGM-ADJ	76.00	85.07 ± 0.61	82.53 ± 1.01	82.80 ± 0.80	82.67 ± 0.46	84.40 ± 2.40	82.93 ± 1.01
ARGM-EXT	86.93	87.37 ± 1.51	90.85 ± 2.35	87.80 ± 1.36	89.32 ± 3.02	88.89 ± 3.98	83.44 ± 3.94
ARGM-PNC	69.74	82.89 ± 1.32	84.21 ± 1.32	84.21 ± 2.63	82.89 ± 1.32	83.77 ± 4.02	79.82 ± 2.01
ARGM-GOL	76.71	86.76 ± 2.85	89.95 ± 4.19	88.58 ± 2.09	78.54 ± 1.58	85.84 ± 0.79	84.93 ± 2.74
ARGM-LVB	97.18	98.59 ± 0.00	98.12 ± 0.81	98.12 ± 0.81	98.12 ± 2.15	97.18 ± 0.00	97.18 ± 1.41
R-ARGM-LOC	84.62	82.05 ± 3.21	78.97 ± 6.93	86.16 ± 2.66	74.36 ± 0.88	73.85 ± 1.54	79.49 ± 0.89
R-ARGM-TMP	71.43	74.08 ± 3.30	69.84 ± 2.75	82.01 ± 5.10	80.42 ± 2.42	75.66 ± 6.61	77.25 ± 3.30
R-ARG2	70.97	73.12 ± 1.86	77.96 ± 4.06	77.42 ± 4.27	74.19 ± 2.79	69.89 ± 1.86	74.73 ± 1.86
C-ARG2	36.73	44.90 ± 4.08	45.58 ± 8.49	43.54 ± 1.18	43.54 ± 3.12	44.22 ± 6.23	45.58 ± 1.18
C-ARG0	47.06	59.80 ± 3.39	61.76 ± 5.10	56.86 ± 1.70	51.96 ± 6.12	53.92 ± 3.39	54.90 ± 3.39
ARGM-REC	70.59	84.31 ± 1.70	85.29 ± 5.89	78.43 ± 1.70	80.39 ± 3.39	85.29 ± 2.95	80.39 ± 7.40
ARGM-COM	81.48	88.89 ± 0.00	90.12 ± 2.14	92.59 ± 3.71	87.66 ± 4.27	87.66 ± 2.14	87.66 ± 4.27
C-ARGM-ADV	54.55	54.55 ± 0.00	48.48 ± 5.25	54.55 ± 0.00	54.55 ± 0.00	51.52 ± 5.25	57.58 ± 5.25
R-ARGM-MNR	63.64	72.73 ± 9.09	63.64 ± 0.00	81.82 ± 9.09	69.70 ± 5.25	78.79 ± 10.50	66.67 ± 5.25
ARG5	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
C-ARGM-TMP	42.86	71.43 ± 0.00	61.90 ± 8.25	71.43 ± 14.29	57.14 ± 0.00	61.90 ± 8.25	66.67 ± 8.25
R-ARGM-CAU	75.00	91.67 ± 14.43	83.33 ± 14.43	100.00 ± 0.00	100.00 ± 0.00	91.67 ± 14.43	91.67 ± 14.43
C-ARGM-CAU	66.67	66.67 ± 0.00	66.67 ± 0.00	77.78 ± 19.24	66.67 ± 0.00	66.67 ± 0.00	77.78 ± 19.24
C-ARG3	100.00	100.00 ± 0.00	88.89 ± 19.24	88.89 ± 19.24	88.89 ± 19.24	88.89 ± 19.24	100.00 ± 0.00
R-ARG4	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
C-ARGM-EXT	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
R-ARGM-ADV	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
C-ARGM-LOC	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
C-ARGM-MNR	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
C-ARGM-MOD	50.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
R-ARGM-PRP	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
ARGM-PRX	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
ARGA	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
R-ARGM-DIR	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
R-ARGM-PRD	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
C-ARGM-PRD	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
R-ARGM-EXT	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
C-ARGM-PRP	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
R-ARG3	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
ARGM-PRR	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00
ARGM-DSP	100.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00	100.00 ± 0.00    
    '''
    head = True
    group = defaultdict(dict)
    names = ['BERT', 'POS', 'NER', 'CON', 'SRL', 'MTL-5']
    headers = ['BERT', 'STL'] + names[1:]
    ss = defaultdict(dict)
    raw = defaultdict(dict)
    for line in table.splitlines():
        line = line.strip()
        if not line:
            continue
        cells = line.split('\t')
        if not cells:
            continue
        if head:
            head = False
            continue
        label, scores = cells[0], cells[1:]
        for n, s in zip(headers, scores):
            raw[n][label] = s
        scores = [float(x.split()[0]) for x in scores]
        for n, s in zip(headers, scores):
            ss[n][label] = s
        scores[0], scores[1] = scores[1], scores[0]
        for n, s in zip(names, scores[1:]):
            group[n][label] = s - scores[0]
    texts = []
    xys = defaultdict(lambda: ([], []))
    for i, (n, scores) in enumerate(group.items()):
        for j, (label, diff) in enumerate(scores.items()):
            # plt.scatter(i + 1, diff)
            xys[label][0].append(i + 1)
            xys[label][1].append(diff)
            # texts.append(plt.text(i + 1, diff, label))
    nmax = 20
    colors = ['#696969', '#2e8b57', '#800000', '#191970', '#808000', '#ff0000', '#ff8c00', '#ffd700', '#ba55d3',
              '#00fa9a', '#00ffff', '#0000ff', '#adff2f', '#ff00ff', '#1e90ff', '#fa8072', '#eee8aa', '#dda0dd',
              '#ff1493', '#87cefa']

    print('\t'.join([''] + headers))
    headers[0] = 'STL'
    headers[1] = 'BERT'
    for label in xys.keys():
        cs = ['\\texttt{' + label.replace('$', '\\$').replace('_', '\\_') + '}']
        win = max([(g, d[label]) for g, d in ss.items()], key=lambda x: x[-1])[1]
        for g in headers:
            data = ss[g]
            cell = f'{data[label]:.2f}'
            if win == data[label]:
                cell = '\\textbf{' + cell + '}'
            # cell = raw[g][label].replace(' ± ', '$\pm$')
            diff = group[g].get(label, None)
            if diff is not None:
                if diff > 0:
                    cell += '\\posdiff{' + f'{diff:.2f}' + '}'
                else:
                    cell += '\\negdiff{' + f'{diff:.2f}' + '}'
            cs.append(cell)
        print(' & '.join(cs) + ' \\\\ ')
    exit(0)

    for i, (label, xy) in enumerate(xys.items()):
        label = {
            'WORK_OF_ART': 'WOA',
            'PERSON': 'PER',
            'CARDINAL': 'CARD',
            'PERCENT': '%',
            'MONEY': '$',
            'ORDINAL': 'ORD',
            'QUANTITY': 'QUA',
            'PRODUCT': 'PRDT',
            'EVENT': 'EVNT',
            'LANGUAGE': 'LANG',
        }.get(label, label)
        plt.scatter(*xy, label=label if i < nmax else '_nolegend_', color=colors[i % len(colors)], marker='_',
                    s=300 / (i + 1))
    # adjust_text(texts)
    plt.axhline(y=0, color='r', linewidth=0.5, linestyle='--')
    plt.legend(bbox_to_anchor=(1, 1.01), loc='upper left', labelspacing=0.2, borderpad=0.1, handletextpad=0.1)
    plt.xticks(list(range(1, 1 + len(group))), list(group.keys()))
    # plt.ylabel('Δacc')
    plt.tight_layout()
    plt.savefig('EMNLP-2021-MTL/fig/ner-acc-diff.pdf')
    plt.show()


if __name__ == '__main__':
    main()
